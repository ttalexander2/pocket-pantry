{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Documents\\\\School\\\\CSC436\\\\pocket-pantry\\\\Client\\\\App.js\";\n\nimport React, { useState } from \"react\";\nimport { AccessibilityRole } from \"react-native-web/dist/index\";\nimport { ImageProps } from \"react-native-web/dist/index\";\nimport { ImageStyle } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport { ApplicationProvider, Button, Icon, IconRegistry, Layout, Text } from \"@ui-kitten/components\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport { mapping, light, dark } from \"@eva-design/eva\";\nvar heartIcons = [\"üòª\", \"üíñ\", \"üòç\", \"ü•∞\", \"üòç\", \"üíù\", \"üòò\", \"üíì\", \"üíï\", \"üê±\"];\nvar themes = {\n  light: {\n    theme: light,\n    icon: \"sun\",\n    text: \"LIGHT\"\n  },\n  dark: {\n    theme: dark,\n    icon: \"moon\",\n    text: \"DARK\"\n  }\n};\n\nvar renderIcon = function renderIcon(_ref) {\n  var name = _ref.name,\n      style = _ref.style;\n  return React.createElement(Icon, _extends({}, style, {\n    name: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar CustomButtonWithIcon = function CustomButtonWithIcon(_ref2) {\n  var accessibilityRole = _ref2.accessibilityRole,\n      accessibilityLabel = _ref2.accessibilityLabel,\n      icon = _ref2.icon,\n      iconStyle = _ref2.iconStyle,\n      onPress = _ref2.onPress,\n      text = _ref2.text,\n      style = _ref2.style;\n\n  var ButtonIcon = function ButtonIcon() {\n    return renderIcon({\n      name: icon,\n      style: iconStyle\n    });\n  };\n\n  return React.createElement(Button, {\n    style: style,\n    icon: ButtonIcon,\n    onPress: onPress,\n    accessibilityRole: accessibilityRole,\n    accessibilityLabel: accessibilityLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nvar App = function App() {\n  var _useState = useState(heartIcons[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      icon = _useState2[0],\n      setIcon = _useState2[1];\n\n  var _useState3 = useState(\"light\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      themeName = _useState4[0],\n      setThemeName = _useState4[1];\n\n  var theme = themes[themeName].theme;\n\n  var changeIcon = function changeIcon() {\n    var index = Math.floor(Math.random() * heartIcons.length);\n    setIcon(heartIcons[index]);\n  };\n\n  var changeTheme = function changeTheme() {\n    setThemeName(themeName === \"light\" ? \"dark\" : \"light\");\n  };\n\n  var _ref3 = themeName === \"light\" ? themes.dark : themes.light,\n      themeButtonText = _ref3.text,\n      themeButtonIcon = _ref3.icon;\n\n  return React.createElement(React.Fragment, null, React.createElement(IconRegistry, {\n    icons: EvaIconsPack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), React.createElement(ApplicationProvider, {\n    mapping: mapping,\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Layout, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    category: \"h1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Welcome to UI Kitten \", icon), React.createElement(Text, {\n    style: styles.text,\n    category: \"s1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"It works great in the browser and as a native app!\"), React.createElement(Text, {\n    style: styles.text,\n    appearance: \"hint\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Click some buttons to see it working.\"), React.createElement(Button, {\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"Change Icon\",\n    style: styles.iconButton,\n    onPress: changeIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"CHANGE ICON\"), React.createElement(CustomButtonWithIcon, {\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"UI Kitten Change Theme\",\n    style: styles.iconButton,\n    text: \"SWITCH TO \" + themeButtonText + \" THEME\",\n    icon: themeButtonIcon,\n    onPress: changeTheme,\n    iconStyle: {\n      tintColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"Native Change Theme\",\n    onPress: changeTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.nativeButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(RNText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"NATIVE CHANGE THEME\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 10\n  },\n  text: {\n    textAlign: \"center\"\n  },\n  iconButton: {\n    marginVertical: 16\n  },\n  nativeButton: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/Thomas/Documents/School/CSC436/pocket-pantry/Client/App.js"],"names":["React","useState","AccessibilityRole","ImageProps","ImageStyle","ApplicationProvider","Button","Icon","IconRegistry","Layout","Text","EvaIconsPack","mapping","light","dark","heartIcons","themes","theme","icon","text","renderIcon","name","style","CustomButtonWithIcon","accessibilityRole","accessibilityLabel","iconStyle","onPress","ButtonIcon","App","setIcon","themeName","setThemeName","changeIcon","index","Math","floor","random","length","changeTheme","themeButtonText","themeButtonIcon","styles","container","iconButton","tintColor","nativeButton","StyleSheet","create","flex","justifyContent","alignItems","paddingHorizontal","textAlign","marginVertical","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  AccessibilityRole,\r\n  ImageProps,\r\n  ImageStyle,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n  Text as RNText,\r\n} from \"react-native\";\r\nimport {\r\n  ApplicationProvider,\r\n  Button,\r\n  Icon,\r\n  IconRegistry,\r\n  Layout,\r\n  Text,\r\n} from \"@ui-kitten/components\";\r\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\r\nimport { mapping, light, dark } from \"@eva-design/eva\";\r\n\r\nconst heartIcons = [\"üòª\", \"üíñ\", \"üòç\", \"ü•∞\", \"üòç\", \"üíù\", \"üòò\", \"üíì\", \"üíï\", \"üê±\"];\r\nconst themes = {\r\n  light: {\r\n    theme: light,\r\n    icon: \"sun\",\r\n    text: \"LIGHT\",\r\n  },\r\n  dark: {\r\n    theme: dark,\r\n    icon: \"moon\",\r\n    text: \"DARK\",\r\n  },\r\n};\r\n\r\ntype IconProps = {\r\n  name: string;\r\n  style?: ImageStyle;\r\n};\r\n\r\ntype CustomButtonWithIconProps = {\r\n  accessibilityRole: AccessibilityRole;\r\n  accessibilityLabel: string;\r\n  icon: string;\r\n  iconStyle?: ImageStyle;\r\n  onPress: () => void;\r\n  text: string;\r\n  style: any;\r\n};\r\n\r\nconst renderIcon = ({ name, style }: IconProps) => (\r\n  <Icon {...style} name={name} />\r\n);\r\n\r\nconst CustomButtonWithIcon = ({\r\n  accessibilityRole,\r\n  accessibilityLabel,\r\n  icon,\r\n  iconStyle,\r\n  onPress,\r\n  text,\r\n  style,\r\n}: CustomButtonWithIconProps) => {\r\n  const ButtonIcon = () => renderIcon({ name: icon, style: iconStyle });\r\n  return (\r\n    <Button\r\n      style={style}\r\n      icon={ButtonIcon}\r\n      onPress={onPress}\r\n      accessibilityRole={accessibilityRole}\r\n      accessibilityLabel={accessibilityLabel}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst App = (): React.ReactFragment => {\r\n  const [icon, setIcon] = useState(heartIcons[0]);\r\n  const [themeName, setThemeName] = useState(\"light\");\r\n  const theme = themes[themeName].theme;\r\n\r\n  const changeIcon = () => {\r\n    const index = Math.floor(Math.random() * heartIcons.length);\r\n    setIcon(heartIcons[index]);\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    setThemeName(themeName === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const { text: themeButtonText, icon: themeButtonIcon } =\r\n    themeName === \"light\" ? themes.dark : themes.light;\r\n\r\n  return (\r\n    <>\r\n      <IconRegistry icons={EvaIconsPack} />\r\n      <ApplicationProvider mapping={mapping} theme={theme}>\r\n        <Layout style={styles.container}>\r\n          <Text style={styles.text} category=\"h1\">\r\n            Welcome to UI Kitten {icon}\r\n          </Text>\r\n          <Text style={styles.text} category=\"s1\">\r\n            It works great in the browser and as a native app!\r\n          </Text>\r\n          <Text style={styles.text} appearance=\"hint\">\r\n            Click some buttons to see it working.\r\n          </Text>\r\n          <Button\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel=\"Change Icon\"\r\n            style={styles.iconButton}\r\n            onPress={changeIcon}\r\n          >\r\n            CHANGE ICON\r\n          </Button>\r\n          <CustomButtonWithIcon\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel=\"UI Kitten Change Theme\"\r\n            style={styles.iconButton}\r\n            text={`SWITCH TO ${themeButtonText} THEME`}\r\n            icon={themeButtonIcon}\r\n            onPress={changeTheme}\r\n            iconStyle={{ tintColor: \"white\" }}\r\n          />\r\n          <TouchableOpacity\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel=\"Native Change Theme\"\r\n            onPress={changeTheme}\r\n          >\r\n            <View style={styles.nativeButton}>\r\n              <RNText>NATIVE CHANGE THEME</RNText>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </Layout>\r\n      </ApplicationProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n  },\r\n  iconButton: {\r\n    marginVertical: 16,\r\n  },\r\n  nativeButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}