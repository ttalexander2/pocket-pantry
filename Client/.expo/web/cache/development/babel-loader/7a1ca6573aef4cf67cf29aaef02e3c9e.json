{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar devsupport_1 = require(\"../../devsupport\");\n\nvar theme_1 = require(\"../../theme\");\n\nvar Modal = function (_react_1$default$Pure) {\n  _inherits(Modal, _react_1$default$Pure);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      contentFrame: devsupport_1.Frame.zero(),\n      forceMeasure: false\n    };\n    _this.contentPosition = devsupport_1.Point.outscreen();\n\n    _this.show = function () {\n      _this.modalId = theme_1.ModalService.show(_this.renderMeasuringContentElement(), _this.backdropConfig);\n    };\n\n    _this.hide = function () {\n      _this.modalId = theme_1.ModalService.hide(_this.modalId);\n    };\n\n    _this.onContentMeasure = function (contentFrame) {\n      _this.state.contentFrame = contentFrame;\n\n      var displayFrame = _this.state.contentFrame.centerOf(devsupport_1.Frame.window());\n\n      _this.contentPosition = displayFrame.origin;\n      theme_1.ModalService.update(_this.modalId, _this.renderContentElement());\n    };\n\n    _this.renderContentElement = function () {\n      return react_1.default.createElement(react_native_1.View, _extends({}, _this.props, {\n        style: [_this.props.style, styles.modalView, _this.contentFlexPosition]\n      }));\n    };\n\n    _this.renderMeasuringContentElement = function () {\n      return react_1.default.createElement(devsupport_1.MeasureElement, {\n        onMeasure: _this.onContentMeasure\n      }, _this.renderContentElement());\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.modalId && this.props.visible) {\n        this.show();\n        return;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n        this.setState({\n          forceMeasure: true\n        });\n        return;\n      }\n\n      if (!this.modalId && this.props.visible) {\n        this.show();\n        return;\n      }\n\n      if (this.modalId && !this.props.visible) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.hide();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.modalId && this.props.visible) {\n        theme_1.ModalService.update(this.modalId, this.renderContentElement());\n      }\n\n      return null;\n    }\n  }, {\n    key: \"contentFlexPosition\",\n    get: function get() {\n      var derivedStyle = react_native_1.StyleSheet.flatten(this.props.style || {});\n      var _this$contentPosition = this.contentPosition,\n          centerX = _this$contentPosition.x,\n          centerY = _this$contentPosition.y;\n      return {\n        left: derivedStyle.left || centerX,\n        top: derivedStyle.top || centerY\n      };\n    }\n  }, {\n    key: \"backdropConfig\",\n    get: function get() {\n      var _this$props = this.props,\n          onBackdropPress = _this$props.onBackdropPress,\n          backdropStyle = _this$props.backdropStyle;\n      return {\n        onBackdropPress: onBackdropPress,\n        backdropStyle: backdropStyle\n      };\n    }\n  }]);\n\n  return Modal;\n}(react_1.default.PureComponent);\n\nexports.Modal = Modal;\nvar styles = react_native_1.StyleSheet.create({\n  modalView: {\n    position: 'absolute'\n  }\n});","map":{"version":3,"sources":["../../../../../src/components/ui/modal/modal.component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst devsupport_1 = require(\"../../devsupport\");\nconst theme_1 = require(\"../../theme\");\n/**\n * A wrapper that presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets modal visible.\n *\n * @method {() => void} hide - Sets modal invisible.\n *\n * @property {ReactNode} children - Component to render within the modal.\n *\n * @property {boolean} visible - Whether component is visible.\n * Defaults to false.\n *\n * @property {() => void} onBackdropPress - Called when the modal is visible and the view below it was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ModalSimpleUsage\n * Modals accept content views as child elements and are displayed in the screen center.\n * To display a modal, a `visible` property should be used.\n *\n * @overview-example ModalWithBackdrop\n * To configure underlying view, `backdropStyle` and `onBackdropPress` properties may be used.\n */\nclass Modal extends react_1.default.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            contentFrame: devsupport_1.Frame.zero(),\n            forceMeasure: false,\n        };\n        this.contentPosition = devsupport_1.Point.outscreen();\n        this.show = () => {\n            this.modalId = theme_1.ModalService.show(this.renderMeasuringContentElement(), this.backdropConfig);\n        };\n        this.hide = () => {\n            this.modalId = theme_1.ModalService.hide(this.modalId);\n        };\n        this.onContentMeasure = (contentFrame) => {\n            this.state.contentFrame = contentFrame;\n            const displayFrame = this.state.contentFrame.centerOf(devsupport_1.Frame.window());\n            this.contentPosition = displayFrame.origin;\n            theme_1.ModalService.update(this.modalId, this.renderContentElement());\n        };\n        this.renderContentElement = () => {\n            return (react_1.default.createElement(react_native_1.View, Object.assign({}, this.props, { style: [this.props.style, styles.modalView, this.contentFlexPosition] })));\n        };\n        this.renderMeasuringContentElement = () => {\n            return (react_1.default.createElement(devsupport_1.MeasureElement, { onMeasure: this.onContentMeasure }, this.renderContentElement()));\n        };\n    }\n    get contentFlexPosition() {\n        const derivedStyle = react_native_1.StyleSheet.flatten(this.props.style || {});\n        const { x: centerX, y: centerY } = this.contentPosition;\n        // @ts-ignore\n        return { left: derivedStyle.left || centerX, top: derivedStyle.top || centerY };\n    }\n    get backdropConfig() {\n        const { onBackdropPress, backdropStyle } = this.props;\n        return { onBackdropPress, backdropStyle };\n    }\n    componentDidMount() {\n        if (!this.modalId && this.props.visible) {\n            this.show();\n            return;\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n            this.setState({ forceMeasure: true });\n            return;\n        }\n        if (!this.modalId && this.props.visible) {\n            this.show();\n            return;\n        }\n        if (this.modalId && !this.props.visible) {\n            this.hide();\n        }\n    }\n    componentWillUnmount() {\n        this.hide();\n    }\n    render() {\n        if (this.modalId && this.props.visible) {\n            theme_1.ModalService.update(this.modalId, this.renderContentElement());\n        }\n        return null;\n    }\n}\nexports.Modal = Modal;\nconst styles = react_native_1.StyleSheet.create({\n    modalView: {\n        position: 'absolute',\n    },\n});\n//# sourceMappingURL=modal.component.js.map"]},"metadata":{},"sourceType":"script"}