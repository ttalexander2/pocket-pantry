{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction throwPackNotFoundError(name) {\n  var docRoot = 'https://akveo.github.io/react-native-ui-kitten/docs';\n  var message = [\"\\nIcon: Icon Pack '\" + name + \"' is not registered\", 'Using UI Kitten components is only possible with configuring ApplicationProvider.', \"\\uD83D\\uDCD6 Documentation: \" + docRoot + \"/guides/setting-up-icons\"].join('\\n');\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name, pack) {\n  var docRoot = 'https://akveo.github.io/react-native-ui-kitten/docs';\n  var message = [\"\\nIcon: '\" + name + \"' icon is not registered in pack '\" + pack + \"'.\", 'Check icon name or consider switching icon pack.', \"\\uD83D\\uDCD6 Documentation: \" + docRoot + \"/guides/setting-up-icons\"].join('\\n');\n  throw Error(message);\n}\n\nvar RegistryService = function () {\n  function RegistryService() {\n    _classCallCheck(this, RegistryService);\n\n    this.packs = new Map();\n  }\n\n  _createClass(RegistryService, [{\n    key: \"register\",\n    value: function register() {\n      var _this = this;\n\n      for (var _len = arguments.length, packs = new Array(_len), _key = 0; _key < _len; _key++) {\n        packs[_key] = arguments[_key];\n      }\n\n      packs.forEach(function (pack) {\n        _this.registerIconPack(pack);\n      });\n    }\n  }, {\n    key: \"setDefaultIconPack\",\n    value: function setDefaultIconPack(name) {\n      if (!this.packs.has(name)) {\n        throwPackNotFoundError(name);\n      }\n\n      this.defaultPack = name;\n    }\n  }, {\n    key: \"getIconPack\",\n    value: function getIconPack(name) {\n      return this.packs.get(name);\n    }\n  }, {\n    key: \"getIcon\",\n    value: function getIcon(name, pack) {\n      var iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n      return {\n        name: name,\n        pack: iconsPack.name,\n        icon: this.getIconFromPack(name, iconsPack)\n      };\n    }\n  }, {\n    key: \"registerIconPack\",\n    value: function registerIconPack(pack) {\n      this.packs.set(pack.name, pack);\n    }\n  }, {\n    key: \"getPackOrThrow\",\n    value: function getPackOrThrow(name) {\n      var pack = this.packs.get(name);\n\n      if (!pack) {\n        throwPackNotFoundError(name);\n      }\n\n      return pack;\n    }\n  }, {\n    key: \"getDefaultPack\",\n    value: function getDefaultPack() {\n      return this.getIconPack(this.defaultPack);\n    }\n  }, {\n    key: \"getIconFromPack\",\n    value: function getIconFromPack(name, pack) {\n      var shouldThrow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (shouldThrow && !pack.icons[name]) {\n        throwIconNotFoundError(name, pack.name);\n      }\n\n      return pack.icons[name];\n    }\n  }]);\n\n  return RegistryService;\n}();\n\nexports.IconRegistryService = new RegistryService();","map":{"version":3,"sources":["../../../../../../src/components/ui/icon/service/iconRegistry.service.ts"],"names":[],"mappings":";;;;;;;;;;AAUA,SAAS,sBAAT,CAAgC,IAAhC,EAA4C;AAC1C,MAAM,OAAO,GAAW,qDAAxB;AAEA,MAAM,OAAO,GAAW,yBACA,IADA,0BAEtB,mFAFsB,mCAGD,OAHC,+BAItB,IAJsB,CAIjB,IAJiB,CAAxB;AAMA,QAAM,KAAK,CAAC,OAAD,CAAX;AACD;;AAED,SAAS,sBAAT,CAAgC,IAAhC,EAA8C,IAA9C,EAA0D;AACxD,MAAM,OAAO,GAAW,qDAAxB;AAEA,MAAM,OAAO,GAAW,eACV,IADU,0CAC+B,IAD/B,SAEtB,kDAFsB,mCAGD,OAHC,+BAItB,IAJsB,CAIjB,IAJiB,CAAxB;AAMA,QAAM,KAAK,CAAC,OAAD,CAAX;AACD;;IAcK,e;AAAN,6BAAA;AAAA;;AAEY,SAAA,KAAA,GAA0C,IAAI,GAAJ,EAA1C;AAkFX;;;;+BA1E2C;AAAA;;AAAA,wCAApB,KAAoB;AAApB,QAAA,KAAoB;AAAA;;AACxC,MAAA,KAAK,CAAC,OAAN,CAAc,UAAC,IAAD,EAA8B;AAC1C,QAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB;AACD,OAFD;AAGD;;;uCAQyB,I,EAAY;AACpC,UAAI,CAAC,KAAK,KAAL,CAAW,GAAX,CAAe,IAAf,CAAL,EAA2B;AACzB,QAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AAED,WAAK,WAAL,GAAmB,IAAnB;AACD;;;gCAMqB,I,EAAY;AAChC,aAAO,KAAK,KAAL,CAAW,GAAX,CAAe,IAAf,CAAP;AACD;;;4BAQiB,I,EAAc,I,EAAa;AAC3C,UAAM,SAAS,GAAgB,IAAI,GAAG,KAAK,cAAL,CAAoB,IAApB,CAAH,GAA+B,KAAK,cAAL,EAAlE;AAEA,aAAO;AACL,QAAA,IAAI,EAAJ,IADK;AAEL,QAAA,IAAI,EAAE,SAAS,CAAC,IAFX;AAGL,QAAA,IAAI,EAAE,KAAK,eAAL,CAAqB,IAArB,EAA2B,SAA3B;AAHD,OAAP;AAKD;;;qCAO6B,I,EAAiB;AAC7C,WAAK,KAAL,CAAW,GAAX,CAAe,IAAI,CAAC,IAApB,EAA0B,IAA1B;AACD;;;mCAE2B,I,EAAY;AACtC,UAAM,IAAI,GAAwB,KAAK,KAAL,CAAW,GAAX,CAAe,IAAf,CAAlC;;AAEA,UAAI,CAAC,IAAL,EAAW;AACT,QAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD;;AAED,aAAO,IAAP;AACD;;;qCAEuB;AACtB,aAAO,KAAK,WAAL,CAAiB,KAAK,WAAtB,CAAP;AACD;;;oCAE4B,I,EAAc,I,EAAqC;AAAA,UAAlB,WAAkB,uEAAJ,IAAI;;AAC9E,UAAI,WAAW,IAAI,CAAC,IAAI,CAAC,KAAL,CAAW,IAAX,CAApB,EAAsC;AACpC,QAAA,sBAAsB,CAAC,IAAD,EAAO,IAAI,CAAC,IAAZ,CAAtB;AACD;;AAED,aAAO,IAAI,CAAC,KAAL,CAAW,IAAX,CAAP;AACD;;;;;;AAGU,OAAA,CAAA,mBAAA,GAAsB,IAAI,eAAJ,EAAtB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction throwPackNotFoundError(name) {\n    const docRoot = 'https://akveo.github.io/react-native-ui-kitten/docs';\n    const message = [\n        `\\nIcon: Icon Pack '${name}' is not registered`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `ðŸ“– Documentation: ${docRoot}/guides/setting-up-icons`,\n    ].join('\\n');\n    throw Error(message);\n}\nfunction throwIconNotFoundError(name, pack) {\n    const docRoot = 'https://akveo.github.io/react-native-ui-kitten/docs';\n    const message = [\n        `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n        'Check icon name or consider switching icon pack.',\n        `ðŸ“– Documentation: ${docRoot}/guides/setting-up-icons`,\n    ].join('\\n');\n    throw Error(message);\n}\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n    constructor() {\n        this.packs = new Map();\n    }\n    /**\n     * Registers multiple icon packs and sets the first one as default if there is no default packs\n     *\n     * @param {IconPack[]} packs - array of icon packs\n     */\n    register(...packs) {\n        packs.forEach((pack) => {\n            this.registerIconPack(pack);\n        });\n    }\n    /**\n     * Sets pack as default\n     *\n     * @param {string} name\n     * @throws {Error} if pack is nor registered\n     */\n    setDefaultIconPack(name) {\n        if (!this.packs.has(name)) {\n            throwPackNotFoundError(name);\n        }\n        this.defaultPack = name;\n    }\n    /**\n     * @param {string} name\n     * @returns {IconPack} pack by name\n     */\n    getIconPack(name) {\n        return this.packs.get(name);\n    }\n    /**\n     * @param {string} name - icon name\n     * @param {string} pack - pack name\n     * @throws {Error} if requested icon pack is not registered\n     * @returns {RegisteredIcon} - registered icon of a requested/default pack\n     */\n    getIcon(name, pack) {\n        const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n        return {\n            name,\n            pack: iconsPack.name,\n            icon: this.getIconFromPack(name, iconsPack),\n        };\n    }\n    /**\n     * Registers single icon pack\n     *\n     * @param {IconPack} pack - icon pack to register\n     */\n    registerIconPack(pack) {\n        this.packs.set(pack.name, pack);\n    }\n    getPackOrThrow(name) {\n        const pack = this.packs.get(name);\n        if (!pack) {\n            throwPackNotFoundError(name);\n        }\n        return pack;\n    }\n    getDefaultPack() {\n        return this.getIconPack(this.defaultPack);\n    }\n    getIconFromPack(name, pack, shouldThrow = true) {\n        if (shouldThrow && !pack.icons[name]) {\n            throwIconNotFoundError(name, pack.name);\n        }\n        return pack.icons[name];\n    }\n}\nexports.IconRegistryService = new RegistryService();\n//# sourceMappingURL=iconRegistry.service.js.map"]},"metadata":{},"sourceType":"script"}