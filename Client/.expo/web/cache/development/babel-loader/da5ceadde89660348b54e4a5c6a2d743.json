{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.batch = function (target, batchSize) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return target.reduce(function (res, item, index) {\n    var chunkIndex = Math.floor((index + offset) / batchSize);\n\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n\n    res[chunkIndex].push(item);\n    return res;\n  }, []);\n};\n\nexports.range = function (bound) {\n  var producer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (i) {\n    return i;\n  };\n  var arr = [];\n\n  for (var i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};","map":{"version":3,"sources":["../../../../../../src/components/ui/calendar/service/helpers.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;AAMa,OAAA,CAAA,KAAA,GAAQ,UAAI,MAAJ,EAAiB,SAAjB,EAAiE;AAAA,MAA7B,MAA6B,uEAAZ,CAAY;AACpF,SAAO,MAAM,CAAC,MAAP,CAAc,UAAC,GAAD,EAAM,IAAN,EAAY,KAAZ,EAA0B;AAC7C,QAAM,UAAU,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,KAAK,GAAG,MAAT,IAAmB,SAA9B,CAAnB;;AACA,QAAI,CAAC,GAAG,CAAC,UAAD,CAAR,EAAsB;AACpB,MAAA,GAAG,CAAC,UAAD,CAAH,GAAkB,EAAlB;AACD;;AACD,IAAA,GAAG,CAAC,UAAD,CAAH,CAAgB,IAAhB,CAAqB,IAArB;AAEA,WAAO,GAAP;AACD,GARM,EAQJ,EARI,CAAP;AASD,CAVY;;AAeA,OAAA,CAAA,KAAA,GAAQ,UAAI,KAAJ,EAAuD;AAAA,MAApC,QAAoC,uEAAV,UAAA,CAAC;AAAA,WAAI,CAAJ;AAAA,GAAS;AAC1E,MAAM,GAAG,GAAQ,EAAjB;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC9B,IAAA,GAAG,CAAC,IAAJ,CAAS,QAAQ,CAAC,CAAD,CAAjB;AACD;;AAED,SAAO,GAAP;AACD,CARY","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.batch = (target, batchSize, offset = 0) => {\n    return target.reduce((res, item, index) => {\n        const chunkIndex = Math.floor((index + offset) / batchSize);\n        if (!res[chunkIndex]) {\n            res[chunkIndex] = [];\n        }\n        res[chunkIndex].push(item);\n        return res;\n    }, []);\n};\n/**\n * returns array with numbers from zero to bound.\n * */\nexports.range = (bound, producer = i => i) => {\n    const arr = [];\n    for (let i = 0; i < bound; i++) {\n        arr.push(producer(i));\n    }\n    return arr;\n};\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"script"}