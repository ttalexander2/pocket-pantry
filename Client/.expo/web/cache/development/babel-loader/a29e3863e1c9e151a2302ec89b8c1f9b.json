{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar theme_1 = require(\"../../theme\");\n\nvar baseDatepicker_component_1 = require(\"./baseDatepicker.component\");\n\nvar rangeCalendar_component_1 = require(\"../calendar/rangeCalendar.component\");\n\nvar RangeDatepicker = function (_baseDatepicker_compo) {\n  _inherits(RangeDatepicker, _baseDatepicker_compo);\n\n  var _super = _createSuper(RangeDatepicker);\n\n  function RangeDatepicker(props) {\n    var _this;\n\n    _classCallCheck(this, RangeDatepicker);\n\n    _this = _super.call(this, props);\n\n    _this.clear = function () {\n      _this.props.onSelect && _this.props.onSelect({});\n    };\n\n    _this.clear = _this.clear.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RangeDatepicker, [{\n    key: \"getComponentTitle\",\n    value: function getComponentTitle() {\n      var _this$props$range = this.props.range,\n          startDate = _this$props$range.startDate,\n          endDate = _this$props$range.endDate;\n\n      if (startDate || endDate) {\n        var start = startDate ? this.props.dateService.format(startDate, null) : '';\n        var end = endDate ? this.props.dateService.format(endDate, null) : '';\n        return start + \" - \" + end;\n      } else {\n        return this.props.placeholder;\n      }\n    }\n  }, {\n    key: \"renderCalendar\",\n    value: function renderCalendar() {\n      return react_1.default.createElement(rangeCalendar_component_1.RangeCalendar, _extends({}, this.calendarProps));\n    }\n  }, {\n    key: \"calendarProps\",\n    get: function get() {\n      return {\n        min: this.props.min,\n        max: this.props.max,\n        range: this.props.range,\n        dateService: this.props.dateService,\n        boundingMonth: this.props.boundingMonth,\n        startView: this.props.startView,\n        filter: this.props.filter,\n        title: this.props.title,\n        onSelect: this.props.onSelect,\n        renderDay: this.props.renderDay,\n        renderMonth: this.props.renderMonth,\n        renderYear: this.props.renderYear,\n        renderFooter: this.props.renderFooter\n      };\n    }\n  }]);\n\n  return RangeDatepicker;\n}(baseDatepicker_component_1.BaseDatepickerComponent);\n\nRangeDatepicker.styledComponentName = 'Datepicker';\nRangeDatepicker = __decorate([theme_1.styled('Datepicker')], RangeDatepicker);\nexports.RangeDatepicker = RangeDatepicker;","map":{"version":3,"sources":["../../../../../src/components/ui/datepicker/rangeDatepicker.component.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAA,OAAA,GAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,eAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,8BAAA;;AAIA,IAAA,yBAAA,GAAA,OAAA,uCAAA;;AAsHA,IAAa,eAAb;AAAA;;AAAA;;AAIE,2BAAY,KAAZ,EAA0C;AAAA;;AAAA;;AACxC,8BAAM,KAAN;;AAsBK,UAAA,KAAA,GAAQ,YAAW;AACxB,YAAK,KAAL,CAAW,QAAX,IAAuB,MAAK,KAAL,CAAW,QAAX,CAAoB,EAApB,CAAvB;AACD,KAFM;;AArBL,UAAK,KAAL,GAAa,MAAK,KAAL,CAAW,IAAX,+BAAb;AAFwC;AAGzC;;AAPH;AAAA;AAAA,wCAiC6B;AAAA,8BACM,KAAK,KAAL,CAAW,KADjB;AAAA,UACjB,SADiB,qBACjB,SADiB;AAAA,UACN,OADM,qBACN,OADM;;AAGzB,UAAI,SAAS,IAAI,OAAjB,EAA0B;AACxB,YAAM,KAAK,GAAW,SAAS,GAAG,KAAK,KAAL,CAAW,WAAX,CAAuB,MAAvB,CAA8B,SAA9B,EAAyC,IAAzC,CAAH,GAAoD,EAAnF;AACA,YAAM,GAAG,GAAW,OAAO,GAAG,KAAK,KAAL,CAAW,WAAX,CAAuB,MAAvB,CAA8B,OAA9B,EAAuC,IAAvC,CAAH,GAAkD,EAA7E;AAEA,eAAU,KAAV,WAAqB,GAArB;AACD,OALD,MAKO;AACL,eAAO,KAAK,KAAL,CAAW,WAAlB;AACD;AACF;AA5CH;AAAA;AAAA,qCA8C0B;AACtB,aAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,yBAAA,CAAA,aAAD,EAAc,SAAA,EAAA,EAAK,KAAK,aAAV,CAAd,CAFF;AAID;AAnDH;AAAA;AAAA,wBAS2B;AACvB,aAAO;AACL,QAAA,GAAG,EAAE,KAAK,KAAL,CAAW,GADX;AAEL,QAAA,GAAG,EAAE,KAAK,KAAL,CAAW,GAFX;AAGL,QAAA,KAAK,EAAE,KAAK,KAAL,CAAW,KAHb;AAIL,QAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAJnB;AAKL,QAAA,aAAa,EAAE,KAAK,KAAL,CAAW,aALrB;AAML,QAAA,SAAS,EAAE,KAAK,KAAL,CAAW,SANjB;AAOL,QAAA,MAAM,EAAE,KAAK,KAAL,CAAW,MAPd;AAQL,QAAA,KAAK,EAAE,KAAK,KAAL,CAAW,KARb;AASL,QAAA,QAAQ,EAAE,KAAK,KAAL,CAAW,QAThB;AAUL,QAAA,SAAS,EAAE,KAAK,KAAL,CAAW,SAVjB;AAWL,QAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAXnB;AAYL,QAAA,UAAU,EAAE,KAAK,KAAL,CAAW,UAZlB;AAaL,QAAA,YAAY,EAAE,KAAK,KAAL,CAAW;AAbpB,OAAP;AAeD;AAzBH;;AAAA;AAAA,EAA+C,0BAAA,CAAA,uBAA/C,CAAA;;AAES,eAAA,CAAA,mBAAA,GAA8B,YAA9B;AAFI,eAAe,GAAA,UAAA,CAAA,CAD3B,OAAA,CAAA,MAAA,CAAO,YAAP,CAC2B,CAAA,EAAf,eAAe,CAAf;AAAA,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst theme_1 = require(\"../../theme\");\nconst baseDatepicker_component_1 = require(\"./baseDatepicker.component\");\nconst rangeCalendar_component_1 = require(\"../calendar/rangeCalendar.component\");\n/**\n * Range date picker provides a simple way to select a date range within a picker displayed in modal.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets picker visible.\n *\n * @method {() => void} hide - Sets picker invisible.\n *\n * @method {() => void} focus - Focuses Datepicker and sets it visible.\n *\n * @method {() => void} blur - Removes focus from Datepicker and sets it invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the Datepicker is currently focused and visible.\n *\n * @method {() => void} clear - Removes all text from the Datepicker.\n *\n * @property {CalendarRange<D>} range - Date range which is currently selected.\n * CalendarRange `startDate?: D, endDate?: D` - Object with start and end dates for date range.\n * A range may contain only a startDate or both startDate and endDate properties meaning completeness of picked value.\n *\n * @property {(CalendarRange) => void} onSelect - Called when day cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Whether previous and next months in the current month view should be rendered.\n *\n * @property {D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D) => string} title - A function to transform selected date to a string displayed in header.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when input field is empty.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {ReactText | (TextProps) => ReactElement} caption - String, number or a function component\n * to render to bottom of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} captionIcon - Function component\n * to render to start of the *caption*.\n * Expected to return an Image.\n *\n * @property {() => void} onFocus - Called when picker becomes visible.\n *\n * @property {() => void} onBlur - Called when picker becomes invisible.\n *\n * @property {string | PopoverPlacement} placement - Position of the picker relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RangeDatepickerSimpleUsage\n * Ranged picker works with special range object - CalendarRange: `{ startDate: Date, endDate: Date }`.\n * For incomplete ranges, there is only a `startDate` property.\n */\nlet RangeDatepicker = class RangeDatepicker extends baseDatepicker_component_1.BaseDatepickerComponent {\n    constructor(props) {\n        super(props);\n        this.clear = () => {\n            this.props.onSelect && this.props.onSelect({});\n        };\n        this.clear = this.clear.bind(this);\n    }\n    get calendarProps() {\n        return {\n            min: this.props.min,\n            max: this.props.max,\n            range: this.props.range,\n            dateService: this.props.dateService,\n            boundingMonth: this.props.boundingMonth,\n            startView: this.props.startView,\n            filter: this.props.filter,\n            title: this.props.title,\n            onSelect: this.props.onSelect,\n            renderDay: this.props.renderDay,\n            renderMonth: this.props.renderMonth,\n            renderYear: this.props.renderYear,\n            renderFooter: this.props.renderFooter,\n        };\n    }\n    // BaseDatepickerComponent\n    getComponentTitle() {\n        const { startDate, endDate } = this.props.range;\n        if (startDate || endDate) {\n            const start = startDate ? this.props.dateService.format(startDate, null) : '';\n            const end = endDate ? this.props.dateService.format(endDate, null) : '';\n            return `${start} - ${end}`;\n        }\n        else {\n            return this.props.placeholder;\n        }\n    }\n    renderCalendar() {\n        return (\n        // @ts-ignore\n        react_1.default.createElement(rangeCalendar_component_1.RangeCalendar, Object.assign({}, this.calendarProps)));\n    }\n};\nRangeDatepicker.styledComponentName = 'Datepicker';\nRangeDatepicker = __decorate([\n    theme_1.styled('Datepicker')\n], RangeDatepicker);\nexports.RangeDatepicker = RangeDatepicker;\n//# sourceMappingURL=rangeDatepicker.component.js.map"]},"metadata":{},"sourceType":"script"}