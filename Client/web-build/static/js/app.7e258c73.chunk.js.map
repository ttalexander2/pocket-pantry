{"version":3,"sources":["src/navigation/HomeBar.js","src/navigation/Dashboard.js","src/navigation/Pantry.js","src/navigation/Calendar.js","src/navigation/Cookbook.js","src/navigation/GroceryList.js","src/Navigation.js","App.js","web-build/register-service-worker.js"],"names":["DrawerIcon","props","name","MenuIcon","InfoIcon","LogoutIcon","styles","StyleSheet","create","container","minHeight","HomeBar","React","useState","menuVisible","setMenuVisible","toggleMenu","renderMenuAction","icon","onPress","style","level","alignment","title","accessoryLeft","appearance","size","navigation","toggleDrawer","accessoryRight","Fragment","anchor","visible","onBackdropPress","foodExpire","date","Dashboard","h1","data","renderItem","item","index","Pantry","this","DayCell","flex","flexDirection","layout","justifyContent","alignItems","View","dayContainer","text","getDate","aspectRatio","calendar","width","height","value","fontSize","fontWeight","CalendarView","setDate","onSelect","nextDate","renderDay","Cookbook","state","recipeResults","recipeContent","queryStr","selected","placeholder","onChangeText","setState","getJson","fixed","trim","hasOwnProperty","Image","source","uri","image","PlaceholderContent","ActivityIndicator","category","yield","ingredients","map","instructions","JSON","stringify","ScrollView","results","resizeMode","thumbnail","color","Linking","openURL","href","scrapeRecipe","stuff","split","myHeaders","Headers","append","raw","fetch","method","headers","body","redirect","then","response","result","parse","e","console","log","catch","error","url","GroceryList","createDrawerNavigator","Navigator","Screen","DrawerContent","selectedIndex","IndexPath","navigate","routeNames","row","AppNavigator","NavigationContainer","drawerContent","component","themes","light","theme","dark","CustomButtonWithIcon","accessibilityRole","accessibilityLabel","iconStyle","renderIcon","paddingHorizontal","textAlign","iconButton","marginVertical","nativeButton","backgroundColor","padding","App","themeName","logIn","setLogIn","themeButtonIcon","icons","EvaIconsPack","mapping","tintColor","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.7e258c73.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Text, Icon, Layout, MenuItem, OverflowMenu, TopNavigation, TopNavigationAction, Button } from '@ui-kitten/components';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst BackIcon = (props) => (\r\n  <Icon {...props} name='arrow-back'/>\r\n);\r\n\r\nconst EditIcon = (props) => (\r\n  <Icon {...props} name='edit'/>\r\n);\r\n\r\nconst DrawerIcon = (props) => (\r\n  <Icon {...props} name='menu'/>\r\n);\r\n\r\nconst MenuIcon = (props) => (\r\n  <Icon {...props} name='more-vertical'/>\r\n);\r\n\r\nconst InfoIcon = (props) => (\r\n  <Icon {...props} name='info'/>\r\n);\r\n\r\nconst LogoutIcon = (props) => (\r\n  <Icon {...props} name='log-out'/>\r\n);\r\n\r\nconst HomeBar = (props) => {\r\n\r\n  const [menuVisible, setMenuVisible] = React.useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n\r\n  const renderMenuAction = () => (\r\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\r\n  );\r\n\r\n  const renderRightActions = () => (\r\n    <React.Fragment>\r\n      <OverflowMenu\r\n        anchor={renderMenuAction}\r\n        visible={menuVisible}\r\n        onBackdropPress={toggleMenu}>\r\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\r\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\r\n      </OverflowMenu>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderLeftActions = () => (\r\n    <Button appearance='ghost' size='giant' accessoryLeft={DrawerIcon}\r\n      onPress={() => props.navigation.toggleDrawer()}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Layout style={styles.container} level='1'>\r\n      <TopNavigation\r\n        alignment='center'\r\n        title={props.name}\r\n        accessoryLeft={renderLeftActions}\r\n        accessoryRight={renderRightActions}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    minHeight: 128,\r\n  },\r\n});\r\n\r\n\r\nexport default HomeBar;","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport { Layout, Card, Text, List, ListItem } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport Header from '../modules/Header';\r\n\r\nconst foodExpire = [{name: 'sushi', date: 'xx/xx'}, {name: 'nigiri', date: 'xx/xx'}, {name: 'ramen', date: 'xx/xx'}, {name: 'tempura', date: 'xx/xx'}]\r\nconst foodFavorite = [{name: 'sushi'}, {name: 'ramen'}]\r\nconst foodRecipe = [{name: 'sushi'}]\r\n\r\n\r\n\r\nconst Dashboard = ({ navigation }) => {\r\n\r\n    const renderItem = ({item, index}) => (\r\n        <ListItem\r\n        title={`${item.name}`}\r\n        accessoryRight={() => (<Text>{item.date}</Text>)}\r\n      />        \r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <HomeBar name='Dashboard' navigation={navigation} />    \r\n            <Text h1>Hello, World!</Text>\r\n            <List\r\n                data={foodExpire}\r\n                renderItem={renderItem}\r\n            />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import * as React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport { Card } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport { Layout, Text } from '@ui-kitten/components';\r\n\r\nconst list = [\r\n  {\r\n    name: 'Rice',\r\n    subtitle: '120 Grains'\r\n  },\r\n  {\r\n    name: 'Pasta',\r\n    subtitle: '232 Shells'\r\n  }\r\n]\r\n\r\nexport default class Pantry extends React.Component {\r\n  render(){\r\n    return(\r\n      <Layout>\r\n        <HomeBar name='Pantry' navigation={this.props.navigation}/>\r\n      </Layout>\r\n    )\r\n  }\r\n};\r\n\r\n/*===========================Styles================================*/\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  layout: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});","import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { Layout, Header, Calendar, Text, Button  } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\n\r\nconst DayCell = ({ date }, style) => (\r\n  <View\r\n    style={[styles.dayContainer, style.container]}>\r\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\r\n    <Text style={styles.dayContainer}>OH SHIT</Text>\r\n    <Text style={styles.dayContainer}>OH SHIT</Text>\r\n    <Text style={styles.dayContainer}>OH SHIT</Text>\r\n    <Text style={styles.dayContainer}>OH SHIT</Text>\r\n    <Text style={styles.dayContainer}>OH SHIT</Text>\r\n    <Text style={styles.dayContainer}>OH SHIT</Text>\r\n  </View>\r\n);\r\n\r\nexport const CalendarView = ({navigation}) => {\r\n\r\n  const [date, setDate] = React.useState(null);\r\n\r\n  return (\r\n    <Layout>\r\n      <HomeBar name=\"Calendar\" navigation={navigation} />\r\n      <Calendar\r\n        style={styles.calendar}\r\n        date={date}\r\n        onSelect={nextDate => setDate(nextDate)}\r\n        renderDay={DayCell}\r\n      />\r\n    </Layout>\r\n\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  dayContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    aspectRatio: 1,\r\n  },\r\n  calendar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  value: {\r\n    fontSize: 12,\r\n    fontWeight: '400',\r\n  },\r\n});\r\n\r\nexport default CalendarView;\r\n","import * as React from 'react';\r\nimport { View, ScrollView, Linking, StyleSheet, ActivityIndicator, Image } from \"react-native\";\r\nimport { Layout, Text, Input, Button, Card } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport Header from '../modules/Header';\r\n\r\n\r\n\r\nexport default class Cookbook extends React.Component{\r\n  state = {\r\n    recipeResults: {\"results\": []},\r\n    recipeContent: {},\r\n    queryStr: \"\",\r\n    selected: null,\r\n    data: ['SELECTED','NOT SELECTED']\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n          <HomeBar name='Cookbook' navigation={this.props.navigation}/>\r\n            <View>\r\n              <Input placeholder=\"Ingredient\" value={this.state.queryStr} onChangeText={(text) => {this.setState({queryStr: text})}} />\r\n              <Button onPress={() => { this.getJson()}}>Search</Button>\r\n            </View>\r\n            <View style={styles.fixed}>\r\n                    {\r\n                      this.state.selected != null\r\n                      &&\r\n                      <Layout>\r\n                        <Text>\r\n                          {this.state.selected.trim()}\r\n                        </Text>\r\n                        <Text>\r\n                          {\r\n                          this.state.recipeContent.hasOwnProperty('title')\r\n                          ?\r\n                          <View>\r\n                            {\r\n                              this.state.recipeContent.hasOwnProperty('image')\r\n                              &&\r\n                              <Image \r\n                              source={{ uri: this.state.recipeContent.image }}\r\n                              style={{ width: 200, height: 200 }}\r\n                              PlaceholderContent={<ActivityIndicator/>}\r\n                            />\r\n                            }\r\n                            <Text category='h4'>\r\n                            {\r\n                            this.state.recipeContent.hasOwnProperty('yield')\r\n                            &&\r\n                            this.state.recipeContent.yield\r\n                            }\r\n                            </Text>\r\n                            <Text category='h3'>\r\n                              Ingredients\r\n                            </Text>\r\n                            <View>\r\n                            {\r\n                              this.state.recipeContent.hasOwnProperty('ingredients')\r\n                              &&\r\n                              this.state.recipeContent.ingredients.map((item) => {\r\n                                return(\r\n                                  <Text>\r\n                                    - {item}\r\n                                  </Text>\r\n                                )\r\n                              })\r\n                            }\r\n                            </View>\r\n                            <Text category='h3'>\r\n                              Instructions\r\n                            </Text>\r\n                            <Text>\r\n                              {\r\n                                this.state.recipeContent.hasOwnProperty('instructions')\r\n                                &&\r\n                                this.state.recipeContent.instructions\r\n                              }\r\n                            </Text>\r\n                          </View>\r\n                          :\r\n                          JSON.stringify(this.state.recipeContent)\r\n                          }\r\n                        </Text>\r\n                      </Layout>\r\n                    }    \r\n            </View>\r\n            <ScrollView>\r\n              <View style={styles.container} >\r\n                <View style={styles.item}>\r\n                {\r\n                  this.state.recipeResults.results.map((item) => {\r\n                    return(\r\n                      <Layout>\r\n                        <Text>\r\n                          {item.title.trim()}\r\n                        </Text>\r\n                        <Image resizeMode=\"cover\"\r\n                          source={{ uri: item.thumbnail }}>\r\n                        </Image>\r\n                        <Text>Ingredients: {item.ingredients}</Text>\r\n                        <Text style={{color: 'blue'}}\r\n                            onPress={() => Linking.openURL(item.href)}>\r\n                          {item.href}\r\n                        </Text>\r\n                        <Button onPress={() => {\r\n                          this.setState({selected: item.title});\r\n                          this.scrapeRecipe(item.href);\r\n                        }}>Open</Button>\r\n                      </Layout>\r\n                    )\r\n                  })\r\n                }\r\n                </View>\r\n              </View>\r\n            </ScrollView>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  getJson(){\r\n\r\n    const stuff = {\r\n        ingredients: this.state.queryStr.split(', ')\r\n    };\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n    var raw = JSON.stringify(stuff);\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(\"https://pocketpantry.app/api/recipes\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        try {\r\n          this.setState({recipeResults: JSON.parse(result)});\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n        \r\n        })\r\n      .catch(error => console.log('error', error));\r\n \r\n  }\r\n\r\n  scrapeRecipe(url){\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n    var raw = JSON.stringify({'url':url});\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(\"https://pocketpantry.app/api/recipes/scrape\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        try {\r\n          this.setState({recipeContent: JSON.parse(result)});\r\n          \r\n        } catch (e) {\r\n            this.setState({recipeContent: result})\r\n        }\r\n      })\r\n      .catch(error => console.log('error', error));   \r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n\r\n  },\r\n  item: {\r\n\r\n  },\r\n  fixed: {\r\n\r\n  }\r\n})\r\n","import * as React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { ThemeProvider, Header } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\n\r\nexport default class GroceryList extends React.Component{\r\n\r\nrender() {\r\n    return (\r\n      <View>\r\n        <HomeBar name='Grocery List' navigation={this.props.navigation} />\r\n      </View>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { SafeAreaView } from 'react-native'; \r\nimport { Drawer, DrawerItem, IndexPath } from '@ui-kitten/components';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Dashboard from './navigation/Dashboard.js';\r\nimport Pantry from './navigation/Pantry.js';\r\nimport CalendarView from './navigation/Calendar.js';\r\nimport Cookbook from './navigation/Cookbook.js';\r\nimport GroceryList from './navigation/GroceryList.js';\r\n\r\nconst {Navigator, Screen } = createDrawerNavigator();\r\n\r\nconst DrawerContent = ({ navigation, state }) => (\r\n  <Drawer\r\n    selectedIndex={new IndexPath(state.index)}\r\n    onSelect={index => navigation.navigate(state.routeNames[index.row])}>\r\n    <DrawerItem title='Dashboard' />\r\n    <DrawerItem title='Pantry' />\r\n    <DrawerItem title='Calendar' />\r\n    <DrawerItem title='Cookbook' />\r\n    <DrawerItem title='Groceries' />\r\n  </Drawer>\r\n);\r\n\r\nconst AppNavigator = () => (\r\n  <NavigationContainer>\r\n      <Navigator drawerContent={props => <DrawerContent {...props}/>}>\r\n        <Screen name='Dashboard' component={Dashboard}/>\r\n        <Screen name='Pantry' component={Pantry}/>\r\n        <Screen name='Calendar' component={CalendarView}/>\r\n        <Screen name='Cookbook' component={Cookbook}/>\r\n        <Screen name='Groceries' component={GroceryList}/>\r\n    </Navigator>\r\n  </NavigationContainer>\r\n);\r\n\r\n\r\nexport default AppNavigator;","import React, { useState } from \"react\";\r\nimport {\r\n  AccessibilityRole,\r\n  ImageProps,\r\n  ImageStyle,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n  Text as RNText,\r\n} from \"react-native\";\r\nimport {\r\n  ApplicationProvider,\r\n  Button,\r\n  Icon,\r\n  IconRegistry,\r\n  Layout,\r\n  Text,\r\n} from \"@ui-kitten/components\";\r\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\r\nimport { mapping, light, dark } from \"@eva-design/eva\";\r\nimport AppNavigator from './src/Navigation'\r\n\r\nconst themes = {\r\n  light: {\r\n    theme: light,\r\n    icon: \"sun\",\r\n    text: \"LIGHT\",\r\n  },\r\n  dark: {\r\n    theme: dark,\r\n    icon: \"moon\",\r\n    text: \"DARK\",\r\n  },\r\n};\r\n\r\ntype IconProps = {\r\n  name: string;\r\n  style?: ImageStyle;\r\n};\r\n\r\ntype CustomButtonWithIconProps = {\r\n  accessibilityRole: AccessibilityRole;\r\n  accessibilityLabel: string;\r\n  icon: string;\r\n  iconStyle?: ImageStyle;\r\n  onPress: () => void;\r\n  text: string;\r\n  style: any;\r\n};\r\n\r\nconst renderIcon = ({ name, style }: IconProps) => (\r\n  <Icon {...style} name={name} />\r\n);\r\n\r\nconst CustomButtonWithIcon = ({\r\n  accessibilityRole,\r\n  accessibilityLabel,\r\n  icon,\r\n  iconStyle,\r\n  onPress,\r\n  text,\r\n  style,\r\n}: CustomButtonWithIconProps) => {\r\n  const ButtonIcon = () => renderIcon({ name: icon, style: iconStyle });\r\n  return (\r\n    <Button\r\n      style={style}\r\n      icon={ButtonIcon}\r\n      onPress={onPress}\r\n      accessibilityRole={accessibilityRole}\r\n      accessibilityLabel={accessibilityLabel}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst App = (): React.ReactFragment => {\r\n\r\n  const [themeName, setThemeName] = useState(\"light\");\r\n  const theme = themes[themeName].theme;\r\n  const [logIn, setLogIn] = useState(false);\r\n\r\n  const changeTheme = () => {\r\n    setThemeName(themeName === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const { text: themeButtonText, icon: themeButtonIcon } =\r\n    themeName === \"light\" ? themes.dark : themes.light;\r\n\r\n  return (\r\n    <>\r\n      <IconRegistry icons={EvaIconsPack} />\r\n      <ApplicationProvider mapping={mapping} theme={theme}>\r\n        {\r\n          !logIn\r\n          ?\r\n          <Layout style={styles.container}>\r\n          <Text style={styles.text} category=\"h1\">\r\n            Welcome to Pocket Pantry\r\n          </Text>\r\n          <Text style={styles.text} appearance=\"hint\">\r\n          The Kitchen Management Tool!\r\n          </Text>\r\n          <CustomButtonWithIcon\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel=\"Login\"\r\n            style={styles.iconButton}\r\n            text='Hop In!'\r\n            icon={themeButtonIcon}\r\n            onPress={() => {setLogIn(!logIn)}}\r\n            iconStyle={{ tintColor: \"white\" }}\r\n          />\r\n        </Layout>\r\n        :\r\n        <AppNavigator/>\r\n        }\r\n\r\n      </ApplicationProvider>\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n  Change Theme Button:\r\n\r\n  <CustomButtonWithIcon\r\n    accessibilityRole=\"button\"\r\n    accessibilityLabel=\"UI Kitten Change Theme\"\r\n    style={styles.iconButton}\r\n    text={`SWITCH TO ${themeButtonText} THEME`}\r\n    icon={themeButtonIcon}\r\n    onPress={changeTheme}\r\n    iconStyle={{ tintColor: \"white\" }}\r\n  />\r\n\r\n */\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n  },\r\n  iconButton: {\r\n    marginVertical: 16,\r\n  },\r\n  nativeButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}