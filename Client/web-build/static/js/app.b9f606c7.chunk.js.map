{"version":3,"sources":["src/components/Login.js","src/components/HomeBar.js","src/components/Dashboard.js","src/components/BackBar.js","src/components/NewItem.js","src/components/Pantry.js","src/components/Calendar.js","src/components/Cookbook.js","src/components/NewGroceryItem.js","src/components/GroceryList.js","src/components/Navigation.js","src/reducers/UserData.js","src/reducers/CalendarData.js","src/reducers/PantryData.js","src/reducers/PantryEditData.js","src/reducers/GroceryListData.js","src/reducers/GroceryListEditData.js","src/reducers/DashboardData.js","src/reducers/index.js","src/store/index.js","App.js","web-build/register-service-worker.js","assets/are you feeling it now mr krabs.png"],"names":["emailRegex","passwordRegex","styles","StyleSheet","create","container","flex","paddingVertical","paddingHorizontal","signInContainer","flexDirection","alignItems","marginTop","socialAuthContainer","evaButton","maxWidth","formContainer","tabBar","color","backgroundColor","tabViewIndicator","passwordInput","marginBottom","passwordInput2","signInLabel","signUpButton","padding","margin","borderColor","borderRadius","text","alignSelf","socialAuthButtonsContainer","justifyContent","socialAuthHintText","formBackground","connect","props","React","useState","email","setEmail","password","setPassword","passwordVerify","setPasswordVerify","name","setName","selectedIndex","setSelectedIndex","emailValid","setEmailValid","passwordMatches","setPasswordMatches","nameValid","setNameValid","invalidMessage","setInvalidMessage","useSelector","state","UserData","View","style","category","appearance","indicatorStyle","onSelect","index","title","status","label","placeholder","value","onChangeText","secureTextEntry","size","onPress","a","async","userInfo","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","response2","token","decoded","jwt_decode","dispatch","type","username","user","json","jsonResult","groceryList","grocery","ingredients","length","sort","b","expirationDate","search","Array","Math","min","keys","map","i","Date","food","String","stuff","split","result","results6","parse","recipe","catch","error","console","log","onLogIn","val","test","toLowerCase","val2","val3","val4","DrawerIcon","MenuIcon","InfoIcon","LogoutIcon","minHeight","HomeBar","menuVisible","setMenuVisible","toggleMenu","renderMenuAction","icon","level","alignment","accessoryLeft","navigation","toggleDrawer","accessoryRight","Fragment","anchor","visible","onBackdropPress","HeaderExpire","display","HeaderFavorite","HeaderRecipe","expireData","PantryData","recommendedRecipe","DashboardData","results","recipeContent","recipeLoading","loading","recipeLoaded","loaded","paddingLeft","paddingBottom","borderBottom","card","width","header","weekday","day","getDay","date","getMonth","getDate","getFullYear","listStyle","float","fontSize","AboutToExpire","favItem","highestAmount","amount","Favorites","borderTop","href","trim","fontStyle","Linking","openURL","hasOwnProperty","Image","source","uri","image","height","PlaceholderContent","ActivityIndicator","yield","item","instructions","layout","BackIcon","BackBar","accProps","return","renderLeftActions","editingItem","PantryEditData","validItems","valid","editing","now","next","prev","input","brand","unitOfAmount","nextDate","max","dateOfPurchase","Number","isNaN","parseFloat","data","id","active","renderAddIcon","renderDeleteIcon","renderEditIcon","homebar","headerProps","marginLeft","edit","Header","marginRight","emptyIcon","renderItem","renderProps","undefined","toDateString","DayCell","ingredientData","dayContainer","first","second","MapDay","aspectRatio","calendar","fontWeight","setDate","renderDay","Cookbook","recipeResults","queryStr","selected","this","paddingRight","setState","getJson","fixed","ScrollView","scrapeRecipe","e","url","GroceryListEditData","GroceryListData","createDrawerNavigator","Navigator","Screen","DrawerContent","IndexPath","navigate","routeNames","row","AppNavigator","NavigationContainer","drawerContent","component","Dashboard","Pantry","CalendarView","GroceryList","initialState","UserInfo","action","expiration","CalendarData","meals","portions","creation","res","valid_name","valid_brand","valid_amount","valid_unit","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","themes","light","theme","dark","textAlign","iconButton","marginVertical","nativeButton","resizeMode","App","themeName","logIn","setLogIn","store","Store","icons","EvaIconsPack","eva","ImageBackground","require","navigator","addEventListener","serviceWorker","register","scope","info","module","exports"],"mappings":"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","file":"static/js/app.b9f606c7.chunk.js","sourcesContent":["/*\r\nThis component handles the login page of our application. It allows the user to\r\neither sign into their account or it allows them to create a new account. The\r\ncomponent ensures that the email address entered is valif using regex and we\r\nauthenticate to ensure that logins are accurate and secure\r\n*/\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { TabBar, Tab, Button, Input, Text } from '@ui-kitten/components';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\nconst emailRegex = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\r\nconst passwordRegex = /^(?:(?=.*?[A-Z])(?:(?=.*?[0-9])(?=.*?[-!@#$%^&*()_[\\]{},.<>+=])|(?=.*?[a-z])(?:(?=.*?[0-9])|(?=.*?[-!@#$%^&*()_[\\]{},.<>+=])))|(?=.*?[a-z])(?=.*?[0-9])(?=.*?[-!@#$%^&*()_[\\]{},.<>+=]))[A-Za-z0-9!@#$%^&*()_[\\]{},.<>+=-]{7,50}$/;\r\n\r\nconst Login = (props) => {\r\n\r\n    const [email, setEmail] = React.useState();\r\n    const [password, setPassword] = React.useState();\r\n    const [passwordVerify, setPasswordVerify] = React.useState();\r\n    const [name, setName] = React.useState();\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    const [emailValid, setEmailValid] = React.useState(true);\r\n    const [passwordMatches, setPasswordMatches] = React.useState(true);\r\n    const [nameValid, setNameValid] = React.useState(true);\r\n\r\n    const [invalidMessage, setInvalidMessage] = React.useState();\r\n\r\n    const verifyEmail = () => {\r\n        return emailRegex.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const verifyPasswordsMatch = () => {\r\n        return password === passwordVerify;\r\n    }\r\n\r\n    const verifyPasswordValid = () => {\r\n        return passwordRegex.test(String(password));\r\n    }\r\n\r\n    const UserData = useSelector(state => state.UserData);\r\n\r\n\r\n    return(\r\n    <View style={styles.formBackground}>\r\n        <Text style={styles.text} category=\"h1\">\r\n            Welcome to Pocket Pantry\r\n        </Text>\r\n        <Text style={styles.text} appearance=\"hint\">\r\n            The Kitchen Management Tool!\r\n        </Text>\r\n\r\n        <View style={{color: 'white'}}>\r\n            <TabBar style={styles.tabBar}\r\n                indicatorStyle={styles.tabViewIndicator}\r\n                selectedIndex={selectedIndex}\r\n                onSelect={index => setSelectedIndex(index)}>\r\n                <Tab title='Log In'/>\r\n                <Tab title='Sign Up'/>\r\n            </TabBar>\r\n            <Text status='danger'>\r\n                {\r\n                invalidMessage\r\n                }\r\n            </Text>\r\n            {\r\n                selectedIndex === 0\r\n                ?\r\n                <View style={styles.formContainer}>\r\n                    <Input\r\n                        label='EMAIL'\r\n                        placeholder='Email'\r\n                        status='control'\r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                    />\r\n                    <Input\r\n                        style={styles.passwordInput}\r\n                        secureTextEntry={true}\r\n                        placeholder='Password'\r\n                        label='PASSWORD'\r\n                        status='control'\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                    />\r\n                    <Button\r\n                    status='control'\r\n                    size='large'\r\n                    onPress={LogIn}>\r\n                    LOG IN\r\n                    </Button>\r\n                </View>\r\n                :\r\n                <View style={styles.formContainer}>\r\n                    {\r\n                        nameValid\r\n                        ?\r\n                        <Input\r\n                            label='NAME'\r\n                            placeholder='Name'\r\n                            status='control'\r\n                            value={name}\r\n                            onChangeText={setName}\r\n                        />\r\n                        :\r\n                        <Input\r\n                            label='NAME'\r\n                            placeholder='Name'\r\n                            status='danger'\r\n                            value={name}\r\n                            onChangeText={setName}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        emailValid\r\n                        ?\r\n                        <Input\r\n                            label='EMAIL'\r\n                            placeholder='Email'\r\n                            status='control'\r\n                            value={email}\r\n                            onChangeText={setEmail}\r\n                        />\r\n                        :\r\n                        <Input\r\n                            label='EMAIL'\r\n                            placeholder='Email'\r\n                            status='danger'\r\n                            value={email}\r\n                            onChangeText={setEmail}\r\n                        />\r\n                    }\r\n                    {\r\n                        passwordMatches\r\n                        ?\r\n                        <View>\r\n                            <Input\r\n                                style={styles.passwordInput}\r\n                                secureTextEntry={true}\r\n                                placeholder='Password'\r\n                                label='PASSWORD'\r\n                                status='control'\r\n                                value={password}\r\n                                onChangeText={setPassword}\r\n                            />\r\n                            <Input\r\n                                style={styles.passwordInput2}\r\n                                secureTextEntry={true}\r\n                                placeholder='Verify Password'\r\n                                status='control'\r\n                                value={passwordVerify}\r\n                                onChangeText={setPasswordVerify}\r\n                            />\r\n                        </View>\r\n                        :\r\n                        <View>\r\n                            <Input\r\n                                style={styles.passwordInput}\r\n                                secureTextEntry={true}\r\n                                placeholder='Password'\r\n                                label='PASSWORD'\r\n                                status='danger'\r\n                                value={password}\r\n                                onChangeText={setPassword}\r\n                            />\r\n                            <Input\r\n                                style={styles.passwordInput2}\r\n                                secureTextEntry={true}\r\n                                placeholder='Verify Password'\r\n                                status='danger'\r\n                                value={passwordVerify}\r\n                                onChangeText={setPasswordVerify}\r\n                            />\r\n                        </View>\r\n                    }\r\n                    <Button\r\n                        status='control'\r\n                        size='large'\r\n                        onPress={SignUpUser}>\r\n                        SIGN UP\r\n                    </Button>\r\n                </View>\r\n            }\r\n        </View>\r\n    </View>\r\n    )\r\n\r\n    async function LogIn() {\r\n        const userInfo = {\r\n            \"email\": email,\r\n            \"password\": password,\r\n        }\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n        var raw = JSON.stringify(userInfo);\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        var result = await fetch(\"https://pocketpantry.app/login\", requestOptions)\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                response.text().then(response2 => {\r\n                    let token = response2;\r\n                    let decoded = jwt_decode(token);\r\n                    props.dispatch({type: 'SET_USERNAME', username:decoded.user.name});\r\n                    props.dispatch({type: 'SET_EMAIL', email:decoded.user.email});\r\n                    props.dispatch({type: 'SET_JWT_TOKEN', token:token});\r\n\r\n                    requestOptions = {\r\n                        method: 'POST',\r\n                        headers: myHeaders,\r\n                        body: JSON.stringify({token: response2}),\r\n                        redirect: 'follow'\r\n                    };\r\n\r\n\r\n                    fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                    .then((response) => {\r\n                        response.json().then((jsonResult) => {\r\n                            props.dispatch({type: 'SET_GROCERYLIST_DATA', groceryList:jsonResult.grocery});\r\n                            props.dispatch({type: 'SET_INGREDIENT_DATA', ingredients:jsonResult.ingredients});\r\n\r\n                            // Get recipe of the day\r\n\r\n                            if (jsonResult.ingredients.length > 0) {\r\n\r\n                                jsonResult.ingredients.sort((a, b) => (a.expirationDate > b.expirationDate) ? 1 : -1);\r\n                                let search = \"\";\r\n                                [...Array(Math.min(5, jsonResult.ingredients.length)).keys()].map((i) => {\r\n                                    let expirationDate = new Date(jsonResult.ingredients[i].expirationDate);\r\n                                    let food = String(jsonResult.ingredients[i].name);\r\n                                    search += food \r\n                                    if (i < 4){\r\n                                    search += \", \"\r\n                                    }\r\n                                })\r\n                    \r\n                                let stuff = {\r\n                                    ingredients: search.split(','),\r\n                                }\r\n                                var raw = JSON.stringify(stuff);\r\n                            \r\n                                requestOptions = {\r\n                                method: 'POST',\r\n                                headers: myHeaders,\r\n                                body: raw,\r\n                                redirect: 'follow'\r\n                                };\r\n                            \r\n                                fetch(\"https://pocketpantry.app/api/recipes\", requestOptions)\r\n                                .then(response => response.text())\r\n                                .then(result => {\r\n                                    let results6 = JSON.parse(result);\r\n                                    props.dispatch({type: 'SET_DASHBOARD_RECIPE', recipe: results6});\r\n                                    })\r\n                                .catch(error => console.log('error', error));\r\n\r\n                            }\r\n\r\n                        });\r\n                        })\r\n                    .then(result => {})\r\n                    .catch(error => console.log('error', error))\r\n\r\n\r\n\r\n                      \r\n\r\n                    props.onLogIn();\r\n\r\n\r\n                });\r\n            }\r\n            else {\r\n                response.text().then(response2 => {\r\n                    setInvalidMessage(response2);\r\n                });\r\n            }\r\n        })\r\n        .then(result => {})\r\n        .catch(error => console.log('error', error));\r\n\r\n\r\n    }\r\n\r\n    async function SignUpUser() {\r\n        var val = verifyEmail();\r\n        var val2 = verifyPasswordsMatch();\r\n        var val3 = name === '';\r\n        var val4 = verifyPasswordValid();\r\n        setEmailValid(val);\r\n        setPasswordMatches(val2 && val4);\r\n        setNameValid(!val3);\r\n        if (val === false){\r\n            setInvalidMessage('Email is invalid.');\r\n        }\r\n        if (val2 === false)\r\n        {\r\n            setInvalidMessage('Passwords do not match.');\r\n        }\r\n        if (val3 === true){\r\n            setInvalidMessage('Please enter a valid name.')\r\n        }\r\n        if (val4 === false){\r\n            setInvalidMessage('Please enter a valid password\\nPassword must contain a minimum of eight characters, at least one letter, and at least one number.')\r\n        }\r\n        if (val && val2 && !val3 && val4){\r\n            setInvalidMessage('');\r\n            //do the thing here\r\n            const userInfo = {\r\n                \"name\": name,\r\n                \"email\": email,\r\n                \"password\": password,\r\n            }\r\n\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n            var raw = JSON.stringify(userInfo);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(\"https://pocketpantry.app/signup\", requestOptions)\r\n            .then((response) => {\r\n                if (response.status === 200){\r\n                    response.text().then(response2 => {\r\n                        let token = response2;\r\n                        let decoded = jwt_decode(token);\r\n                        props.dispatch({type: 'SET_USERNAME', username:decoded.user.name});\r\n                        props.dispatch({type: 'SET_EMAIL', email:decoded.user.email});\r\n                        props.dispatch({type: 'SET_JWT_TOKEN', token:token});\r\n\r\n                        requestOptions = {\r\n                            method: 'POST',\r\n                            headers: myHeaders,\r\n                            body: JSON.stringify({token: response2}),\r\n                            redirect: 'follow'\r\n                        };\r\n\r\n\r\n                        fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                        .then((response) => {\r\n                            response.json().then((jsonResult) => {\r\n                                props.dispatch({type: 'SET_GROCERYLIST_DATA', groceryList:jsonResult.grocery});\r\n                                props.dispatch({type: 'SET_INGREDIENT_DATA', ingredients:jsonResult.ingredients});\r\n                            });\r\n                        })\r\n                        .then(result => {})\r\n                        .catch(error => console.log('error', error))\r\n\r\n                        props.onLogIn();\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    response.text().then(response2 => {\r\n                        setInvalidMessage(response2);\r\n                    });\r\n                }\r\n            })\r\n            .then(result => {})\r\n            .catch(error => console.log('error', error))\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingVertical: 24,\r\n        paddingHorizontal: 16,\r\n    },\r\n    signInContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginTop: 24,\r\n    },\r\n    socialAuthContainer: {\r\n        marginTop: 48,\r\n    },\r\n    evaButton: {\r\n        maxWidth: 72,\r\n        paddingHorizontal: 0,\r\n    },\r\n    formContainer: {\r\n        flex: 1,\r\n        marginTop: 5,\r\n    },\r\n    tabBar: {\r\n        color: 'rgba(250, 250, 250, 1)',\r\n        flex: 1,\r\n        marginTop: 20,\r\n        backgroundColor: 'transparent',\r\n\r\n    },\r\n    tabViewIndicator: {\r\n        color: 'white',\r\n        backgroundColor: 'white',\r\n    },\r\n    passwordInput: {\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n    },\r\n    passwordInput2: {\r\n        marginBottom: 16,\r\n    },\r\n    signInLabel: {\r\n        flex: 1,\r\n    },\r\n    signUpButton: {\r\n        flexDirection: 'row-reverse',\r\n        padding: 0,\r\n        margin: 5,\r\n        borderColor: 'rgba(250, 250, 250, 0.4)',\r\n        borderRadius: 5,\r\n    },\r\n    text: {\r\n        alignSelf: 'center',\r\n        color: 'rgba(250, 250, 250, 1)',\r\n    },\r\n    socialAuthButtonsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    socialAuthHintText: {\r\n        alignSelf: 'center',\r\n        marginBottom: 16,\r\n    },\r\n    formBackground: {\r\n        borderRadius: 7,\r\n        padding: 26,\r\n        backgroundColor: 'rgba(40, 128, 138, 0.95)',\r\n    },\r\n});\r\n\r\nexport default connect()(Login);\r\n","/*\r\nThis file holds our home bar component. This component works with the back bar\r\nto make navigating the website as easy as possible. It allows the user to click to\r\nany of the other pages from the current page in the app and allows them to\r\nlog out of their account\r\n*/\r\n\r\nimport React from 'react';\r\nimport { Text, Icon, Layout, MenuItem, OverflowMenu, TopNavigation, TopNavigationAction, Button } from '@ui-kitten/components';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst BackIcon = (props) => (\r\n  <Icon {...props} name='arrow-back'/>\r\n);\r\n\r\nconst EditIcon = (props) => (\r\n  <Icon {...props} name='edit'/>\r\n);\r\n\r\nconst DrawerIcon = (props) => (\r\n  <Icon {...props} name='menu'/>\r\n);\r\n\r\nconst MenuIcon = (props) => (\r\n  <Icon {...props} name='more-vertical'/>\r\n);\r\n\r\nconst InfoIcon = (props) => (\r\n  <Icon {...props} name='info'/>\r\n);\r\n\r\nconst LogoutIcon = (props) => (\r\n  <Icon {...props} name='log-out'/>\r\n);\r\n\r\nconst HomeBar = (props) => {\r\n\r\n  const [menuVisible, setMenuVisible] = React.useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n\r\n  const renderMenuAction = () => (\r\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\r\n  );\r\n\r\n  const renderRightActions = () => (\r\n    <React.Fragment>\r\n      <OverflowMenu\r\n        anchor={renderMenuAction}\r\n        visible={menuVisible}\r\n        onBackdropPress={toggleMenu}>\r\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\r\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\r\n      </OverflowMenu>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderLeftActions = () => (\r\n    <Button appearance='ghost' size='giant' accessoryLeft={DrawerIcon}\r\n      onPress={() => props.navigation.toggleDrawer()}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Layout style={styles.container} level='1'>\r\n      <TopNavigation style={{backgroundColor: 'aliceblue'}}\r\n        alignment='center'\r\n        title={props.name}\r\n        accessoryLeft={renderLeftActions}\r\n        accessoryRight={renderRightActions}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    minHeight: 128,\r\n  },\r\n});\r\n\r\n\r\nexport default HomeBar;\r\n","/*\r\nThis file is the first screen the user is brought to when they open our app.\r\nThey can view items they have that are expiring soon, they can see their\r\ncurrent favorite food item, and a suggested recipe. They can also navigate\r\nto any of the other pages in the app\r\n*/\r\n\r\nimport * as React from 'react';\r\nimport { StyleSheet, View, Linking, ActivityIndicator, Image } from 'react-native';\r\nimport { Layout, Card, Text, List, ListItem, Button, Spinner } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\nexport var foodExpire = []\r\nexport var foodFavorite = []\r\nexport var foodRecipe = []\r\n\r\n\r\nconst HeaderExpire = (props) => (\r\n    <View {...props} >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Text category='h3'>Pantry Items Expiring Soon:</Text>\r\n        </div>\r\n    </View>\r\n);\r\nconst HeaderFavorite = (props) => (\r\n    <View {...props} >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Text category='h3'>Current Food Favorites:</Text>\r\n        </div>\r\n    </View>\r\n);\r\nconst HeaderRecipe = (props) => (\r\n    <View {...props} >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Text category='h3'>Recommended Recipe:</Text>\r\n        </div>\r\n    </View>\r\n);\r\n\r\nconst AboutToExpire = (expireData) => {\r\n    expireData.sort((a, b) => (a.expirationDate > b.expirationDate) ? 1 : -1);\r\n    return (\r\n        [...Array(Math.min(5, expireData.length)).keys()].map((i) => {\r\n            let expirationDate = new Date(expireData[i].expirationDate);\r\n            let food = String(expireData[i].name)\r\n\r\n            var weekday = new Array(7);\r\n            weekday[0] = \"Sunday\";\r\n            weekday[1] = \"Monday\";\r\n            weekday[2] = \"Tuesday\";\r\n            weekday[3] = \"Wednesday\";\r\n            weekday[4] = \"Thursday\";\r\n            weekday[5] = \"Friday\";\r\n            weekday[6] = \"Saturday\";\r\n\r\n            var day = weekday[expirationDate.getDay()];\r\n\r\n            let date = String(day + \", \" + (expirationDate.getMonth() + 1) + \"/\" + expirationDate.getDate() + \"/\" + expirationDate.getFullYear());\r\n            return (\r\n                <ul style={{ margin: '0', padding: '0', listStyle: \"circle\" }}>\r\n                    <li style={{ float: 'left', display: \"inline-block\" }}>\r\n                        <Text style={{ fontSize: '22px' }}>({i + 1}) {food} expires on {date}</Text>\r\n                    </li>\r\n                </ul>\r\n            )\r\n\r\n        })\r\n    )\r\n}\r\n\r\nconst Favorites = (expireData) => {\r\n    let favItem = \"\";\r\n    let highestAmount = 0;\r\n    expireData.map((food) => {\r\n        if (food.amount > highestAmount) {\r\n            favItem = food.name;\r\n            highestAmount = food.amount;\r\n        }\r\n    })\r\n    return (\r\n        <ul style={{ margin: '0', padding: '0', listStyle: \"circle\" }}>\r\n            <li style={{ float: 'left', display: \"inline-block\" }}>\r\n                <Text style={{ fontSize: '22px' }}>{favItem}</Text>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const username = useSelector(state => state.UserData.username);\r\n    const expireData = useSelector(state => state.PantryData.ingredients);\r\n    const recommendedRecipe = useSelector(state => state.DashboardData.recipe.results)\r\n    const recipeContent = useSelector(state => state.DashboardData.recipeContent);\r\n    const recipeLoading = useSelector(state => state.DashboardData.loading);\r\n    const recipeLoaded = useSelector(state => state.DashboardData.loaded);\r\n\r\n\r\n    const renderButton = () => {\r\n        if (recipeLoaded || recipeLoading) {\r\n            return (<Text></Text>)\r\n        }\r\n        return (\r\n            <Button style={{ margin: '10px', marginTop: '20px' }} onPress={() => {\r\n                var myHeaders = new Headers();\r\n                myHeaders.append(\"Content-Type\", \"application/json\");\r\n                myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n                var raw = JSON.stringify({ 'url': recommendedRecipe[0].href });\r\n\r\n                var requestOptions = {\r\n                    method: 'POST',\r\n                    headers: myHeaders,\r\n                    body: raw,\r\n                    redirect: 'follow'\r\n                };\r\n\r\n                props.dispatch({ type: 'SET_DASHBOARD_RECIPE_LOADING', loading: true });\r\n\r\n                fetch(\"https://pocketpantry.app/api/recipes/scrape\", requestOptions)\r\n                    .then(response => response.text())\r\n                    .then(result => {\r\n                        props.dispatch({ type: 'SET_DASHBOARD_RECIPE_LOADED', loaded: true });\r\n                        props.dispatch({ type: 'SET_DASHBOARD_RECIPE_LOADING', loading: false });\r\n                        props.dispatch({ type: 'SET_DASHBOARD_RECIPE_CONTENT', recipeContent: JSON.parse(result) });\r\n                    })\r\n                    .catch(error => console.log('error', error));\r\n            }}>Open</Button>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout >\r\n            <HomeBar name='Dashboard' navigation={props.navigation} />\r\n            <Text style={{ paddingLeft: '24px', paddingBottom: '16px', borderBottom: '5px solid royalblue' }} category='h1'>Hello, {username}!</Text>\r\n            <React.Fragment >\r\n                <Card style={styles.card, { width: '90%', margin: 'auto', marginTop: '15px', marginBottom: '15px' }} header={HeaderExpire}>\r\n                    {\r\n                        AboutToExpire(expireData)\r\n                    }\r\n                </Card>\r\n                <Card style={styles.card, { width: '90%', margin: 'auto', marginTop: '15px', marginBottom: '15px' }} header={HeaderFavorite}>\r\n                    {\r\n                        Favorites(expireData)\r\n                    }\r\n                </Card>\r\n                <Card style={styles.card, { width: '90%', margin: 'auto', marginTop: '15px', marginBottom: '15px' }} header={HeaderRecipe}>\r\n                    {\r\n                        recommendedRecipe\r\n                            ?\r\n                            <Layout style={{ display: 'flex', flexDirection: 'row', borderBottom: '3px solid royalblue', borderTop: '3px solid aliceblue', padding: '5px', margin: '5px' }}>\r\n                                <Layout >\r\n                                    {\r\n\r\n                                        renderButton()\r\n                                    }\r\n                                </Layout>\r\n                                <Layout>\r\n                                    <Text category='h3'>\r\n                                        {recommendedRecipe[0].title.trim()}\r\n                                    </Text>\r\n                                    <Text category='h6' style={{ fontStyle: 'italic' }}>Ingredients: {recommendedRecipe[0].ingredients}</Text>\r\n                                    <Text style={{ color: 'blue' }}\r\n                                        onPress={() => Linking.openURL(recommendedRecipe[0].href)}>\r\n                                        {recommendedRecipe[0].href}\r\n                                    </Text>\r\n                                    {\r\n                                        recipeLoading?\r\n                                        <Spinner />\r\n                                        :\r\n                                        <Text></Text>\r\n                                    }\r\n                                    {\r\n                                        recipeContent\r\n                                            ?\r\n                                            recipeContent.hasOwnProperty('title')\r\n                                                ?\r\n                                                <View>\r\n                                                    {\r\n                                                        recipeContent.hasOwnProperty('image')\r\n                                                        &&\r\n                                                        <Image\r\n                                                            source={{ uri: recipeContent.image }}\r\n                                                            style={{ width: 200, height: 200 }}\r\n                                                            PlaceholderContent={<ActivityIndicator />}\r\n                                                        />\r\n                                                    }\r\n                                                    <Text category='h4'>\r\n                                                        {\r\n                                                            recipeContent.hasOwnProperty('yield')\r\n                                                            &&\r\n                                                            recipeContent.yield\r\n                                                        }\r\n                                                    </Text>\r\n                                                    <Text category='h3'>\r\n                                                        Ingredients\r\n                                  </Text>\r\n                                                    <View>\r\n                                                        {\r\n                                                            recipeContent.hasOwnProperty('ingredients')\r\n                                                            &&\r\n                                                            recipeContent.ingredients.map((item) => {\r\n                                                                return (\r\n                                                                    <Text>\r\n                                                                        - {item}\r\n                                                                    </Text>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </View>\r\n                                                    <Text category='h3'>\r\n                                                        Instructions\r\n                                  </Text>\r\n                                                    <Text>\r\n                                                        {\r\n                                                            recipeContent.hasOwnProperty('instructions')\r\n                                                            &&\r\n                                                            recipeContent.instructions\r\n                                                        }\r\n                                                    </Text>\r\n                                                </View>\r\n                                                :\r\n                                                <Text></Text>\r\n                                            :\r\n                                            <Text></Text>\r\n                                    }\r\n                                </Layout>\r\n                            </Layout>\r\n                            :\r\n                            <Text></Text>\r\n                    }\r\n                </Card>\r\n            </React.Fragment>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default connect()(Dashboard);\r\n\r\n\r\n/*===========================Styles================================*/\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n    },\r\n    layout: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n","/*\r\nThis file creates the UI element for the back bar we use in our program.\r\nThis makes navigating the app easier and makes menus more easily accessible\r\nfrom any location in the app.\r\n*/\r\n\r\n\r\nimport React from 'react';\r\nimport { View, Icon, Layout, MenuItem, OverflowMenu, TopNavigation, TopNavigationAction, Button } from '@ui-kitten/components';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst BackIcon = (props) => (\r\n  <Icon {...props} name='arrow-back'/>\r\n);\r\n\r\nconst EditIcon = (props) => (\r\n  <Icon {...props} name='edit'/>\r\n);\r\n\r\nconst DrawerIcon = (props) => (\r\n  <Icon {...props} name='menu'/>\r\n);\r\n\r\nconst MenuIcon = (props) => (\r\n  <Icon {...props} name='more-vertical'/>\r\n);\r\n\r\nconst InfoIcon = (props) => (\r\n  <Icon {...props} name='info'/>\r\n);\r\n\r\nconst LogoutIcon = (props) => (\r\n  <Icon {...props} name='log-out'/>\r\n);\r\n\r\nconst BackBar = (props) => {\r\n\r\n  const [menuVisible, setMenuVisible] = React.useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n\r\n  const renderMenuAction = () => (\r\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\r\n  );\r\n\r\n  const renderRightActions = () => (\r\n    <React.Fragment>\r\n      <OverflowMenu\r\n        anchor={renderMenuAction}\r\n        visible={menuVisible}\r\n        onBackdropPress={toggleMenu}>\r\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\r\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\r\n      </OverflowMenu>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderLeftActions = (props) => (\r\n    <Button appearance='ghost' size='giant' accessoryLeft={BackIcon}\r\n    onPress={() => {props.return()}}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Layout style={styles.container} level='1'>\r\n      <TopNavigation style={{backgroundColor: 'aliceblue'}}\r\n        alignment='center'\r\n        title={props.name}\r\n        accessoryLeft={(accProps) => {return renderLeftActions(props)}}\r\n        accessoryRight={renderRightActions}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    minHeight: 128,\r\n  },\r\n});\r\n\r\n\r\nexport default BackBar;\r\n","/*\r\nThis file creates the component for creating a new item to be added to the pantry.\r\nIt has several fields for the user to to enter information about the item and\r\nwe verify that the information is present and in the correct form.\r\n*/\r\n\r\nimport * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { Layout, Card, Text, List, Button, Input, Datepicker } from '@ui-kitten/components';\r\nimport BackBar from './BackBar';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst NewItem = (props) => {\r\n\r\n    const editingItem = useSelector(state => state.PantryEditData.item);\r\n    const validItems = useSelector(state => state.PantryEditData.valid);\r\n    const editing = useSelector(state => state.PantryEditData.editing);\r\n    const token = useSelector(state => state.UserData.token);\r\n\r\n    const now = new Date();\r\n    const next = new Date(now.getFullYear() + 10, now.getMonth(), now.getDate());\r\n    const prev = new Date(now.getFullYear() - 10, now.getMonth(), now.getDate());\r\n\r\n    return (\r\n        <Layout >\r\n            <BackBar name='Edit an Item' return={props.return} />\r\n              <React.Fragment>\r\n                <Card style={styles.card} header={() => {\r\n                  return(<Text category='h3' style={{margin: 10}}>New Item</Text>)\r\n                }}>\r\n                  <View style={{flex: 1, flexDirection: 'row', alignItems: 'stretch'}}>\r\n                    <View>\r\n                      <Text category='h6' style={styles.input}>Name</Text>\r\n                      <Text category='h6' style={styles.input} >Brand</Text>\r\n                      <Text category='h6' style={styles.input}>Amount</Text>\r\n                      <Text category='h6' style={styles.input}>Units</Text>\r\n                      <Text category='h6' style={styles.input}>Expiration Date</Text>\r\n                      <Text category='h6' style={styles.input}>Purchase Date</Text>\r\n                    </View>\r\n                    <View>\r\n                      <Input placeholder='Name'\r\n                        value={editingItem.name}\r\n                        status={validItems.name}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_EDIT_NAME', name:value});}}\r\n                      />\r\n                      <Input placeholder='Brand'\r\n                        value={editingItem.brand}\r\n                        status={validItems.brand}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_EDIT_BRAND', brand:value});}}\r\n                      />\r\n                      <Input placeholder='Amount'\r\n                        value={editingItem.amount}\r\n                        status={validItems.amount}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_EDIT_AMOUNT', amount:value});}}\r\n                      />\r\n                      <Input placeholder='Units'\r\n                        value={editingItem.unitOfAmount}\r\n                        status={validItems.unitOfAmount}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_EDIT_UNIT', unitOfAmount:value});}}\r\n\r\n                      />\r\n                      <Datepicker\r\n                        date={editingItem.expirationDate}\r\n                        onSelect={nextDate => {props.dispatch({type: 'SET_EDIT_EXPIRATION', expirationDate:nextDate});}}\r\n                        max={next}\r\n                        min={prev}\r\n                      />\r\n                      <Datepicker\r\n                        date={editingItem.dateOfPurchase}\r\n                        onSelect={nextDate => {props.dispatch({type: 'SET_EDIT_PURCHASE', dateOfPurchase:nextDate});}}\r\n                        max={next}\r\n                        min={prev}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n                  <Button\r\n                  onPress ={() => {\r\n                    let valid = true;\r\n                    if (!editingItem.name){\r\n                      valid = false;\r\n                    }\r\n                    if (!editingItem.brand){\r\n                      valid = false;\r\n                    }\r\n                    if (!editingItem.amount || Number.isNaN(Number.parseFloat(editingItem.amount))) {\r\n                      valid = false;\r\n                    }\r\n                    else {\r\n                      props.dispatch({type: 'SET_EDIT_AMOUNT', amount:Number.parseFloat(editingItem.amount)});\r\n                    }\r\n                    if (!editingItem.unitOfAmount){\r\n                      valid = false;\r\n                    }\r\n\r\n                    if (!valid){\r\n                      return;\r\n                    }\r\n\r\n                    let data = {\r\n                      token: token,\r\n                      id: editingItem.id,\r\n                      name: editingItem.name,\r\n                      brand: editingItem.brand,\r\n                      amount: editingItem.amount,\r\n                      unitOfAmount: editingItem.unitOfAmount,\r\n                      expirationDate: new Date(editingItem.expirationDate + 1),\r\n                      dateOfPurchase: new Date(editingItem.dateOfPurchase),\r\n                    }\r\n\r\n                    var myHeaders = new Headers();\r\n                    myHeaders.append(\"Content-Type\", \"application/json\");\r\n                    myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n                    let requestOptions = {\r\n                      method: 'POST',\r\n                      headers: myHeaders,\r\n                      body: JSON.stringify(data),\r\n                      redirect: 'follow'\r\n                    };\r\n\r\n                    if (editing){\r\n                      fetch(\"https://pocketpantry.app/api/update/pantry\", requestOptions)\r\n                      .then((response) => {\r\n                          if (response.status === 200) {\r\n                            fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                                .then((response2) => {\r\n                                  console.log('fetched again')\r\n                                  response2.json().then((jsonResult) => {\r\n                                        props.dispatch({type: 'SET_ACTIVE', active:false});\r\n                                        props.dispatch({type: 'RESET_EDIT_ITEM'});\r\n                                        props.dispatch({type: 'SET_INGREDIENT_DATA', ingredients:jsonResult.ingredients});\r\n                                    });\r\n                                })\r\n                                .then(result => {})\r\n                                .catch(error => console.log('error', error))\r\n                          }\r\n                      })\r\n                      .then(result => {})\r\n                      .catch(error => console.log('error', error))\r\n                    }\r\n                    else {\r\n                      fetch(\"https://pocketpantry.app/api/add/pantry\", requestOptions)\r\n                      .then((response) => {\r\n                          if (response.status === 200) {\r\n                            fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                                .then((response2) => {\r\n                                  console.log('fetched again')\r\n                                  response2.json().then((jsonResult) => {\r\n                                        props.dispatch({type: 'SET_ACTIVE', active:false});\r\n                                        props.dispatch({type: 'RESET_EDIT_ITEM'});\r\n                                        props.dispatch({type: 'SET_INGREDIENT_DATA', ingredients:jsonResult.ingredients});\r\n                                    });\r\n                                })\r\n                                .then(result => {})\r\n                                .catch(error => console.log('error', error))\r\n                          }\r\n                      })\r\n                      .then(result => {})\r\n                      .catch(error => console.log('error', error))\r\n                    }\r\n\r\n\r\n                  }\r\n                }\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Card>\r\n              </React.Fragment>\r\n            </Layout>\r\n    );\r\n};\r\n\r\nexport default connect()(NewItem);\r\n\r\n\r\n/*===========================Styles================================*/\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    layout: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    input: {\r\n      margin: 10\r\n    }\r\n  });\r\n","/*\r\nThis file represents the pantry component of the app. Ingredients that\r\nusers have added to their profiles will appear here, displaying the information\r\nin a text view, as opposed to the calendar view. Users can also add or remove\r\nan item from their pantry here.\r\n*/\r\n\r\nimport * as React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport { Layout, Text, Card, Button, ListItem, List, Icon } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport NewItem from './NewItem';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\nconst Header = (props) => (\r\n  <View {...props}>\r\n    <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n      <Text category='h1'>Your Pantry</Text>\r\n      <div style={{display: 'flex'}}>\r\n      <Button style={{paddingBottom: '15px', marginLeft: '10px'  }} onPress={() => { }}\r\n        appearance='outline'\r\n        accessoryLeft={renderAddIcon}\r\n        onPress={() => {props.dispatch({type: 'SET_ACTIVE', active:true}); props.dispatch({type: 'SET_EDITING', edit:false});}}\r\n      />\r\n\r\n      </div>\r\n    </div>\r\n  </View>\r\n);\r\n\r\nconst renderAddIcon = (props) => (\r\n  <Icon {...props}\r\n  name='plus-outline'\r\n  />\r\n);\r\n\r\nconst Pantry = (props) => {\r\n\r\n  const ingredients = useSelector(state => state.PantryData.ingredients);\r\n  const active = useSelector(state => state.PantryEditData.active);\r\n  const token = useSelector(state => state.UserData.token);\r\n\r\n  const renderDeleteIcon = (props) => (\r\n    <Icon {...props}\r\n    name='trash-2-outline'\r\n    />\r\n  );\r\n\r\n  const renderEditIcon = (props) => (\r\n    <Icon {...props}\r\n    name='edit-outline'\r\n    />\r\n  );\r\n\r\n  const renderItem = (renderProps, props, token) => {\r\n\r\n    let item = renderProps.item;\r\n    let index = renderProps.index;\r\n\r\n    if (item == undefined || item == null){\r\n      return;\r\n    }\r\n\r\n    return(\r\n    <View>\r\n      <ListItem>\r\n      <View appearance='outline' style={{ flex: 1, alignSelf: 'stretch', flexDirection: 'row', marginLeft: 5, marginRight: 5, justifyContent: 'center',\r\n      alignItems: 'center' }}>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {item.name}\r\n        </Text>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {item.brand}\r\n        </Text>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {`${item.amount} ${item.unitOfAmount}`}\r\n        </Text>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {item.expirationDate.toDateString()}\r\n        </Text>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {item.dateOfPurchase.toDateString()}\r\n        </Text>\r\n        <Button style={styles.icon} appearance='outline'\r\n        accessoryLeft={renderEditIcon}\r\n        onPress={() =>{\r\n          props.dispatch({type: 'SET_EDIT_ITEM', item: {\r\n            id: item.id,\r\n            name: item.name,\r\n            brand: item.brand,\r\n            amount: item.amount,\r\n            unitOfAmount: item.unitOfAmount,\r\n            expirationDate: item.expirationDate,\r\n            dateOfPurchase: item.dateOfPurchase,\r\n          }});\r\n          props.dispatch({type: 'SET_EDITING', editing:true});\r\n          props.dispatch({type: 'SET_ACTIVE', active:true});\r\n        }}\r\n        />\r\n        <Button style={styles.icon} appearance='outline'\r\n        accessoryLeft={renderDeleteIcon}\r\n        onPress={() => {\r\n\r\n          let data = {\r\n            token: token,\r\n            id: item.id\r\n          }\r\n\r\n          var myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n          myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n          let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(data),\r\n            redirect: 'follow'\r\n          };\r\n\r\n\r\n          fetch(\"https://pocketpantry.app/api/delete/pantry\", requestOptions)\r\n          .then((response) => {\r\n              if (response.status === 200) {\r\n                fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                    .then((response2) => {\r\n                      response2.json().then((jsonResult) => {\r\n                            props.dispatch({type: 'SET_INGREDIENT_DATA', ingredients:jsonResult.ingredients});\r\n                        });\r\n                    })\r\n                    .then(result => {})\r\n                    .catch(error => console.log('error', error))\r\n              }\r\n          })\r\n          .then(result => {})\r\n          .catch(error => console.log('error', error))\r\n        }}\r\n        />\r\n      </View>\r\n      </ListItem>\r\n\r\n    </View>\r\n    );\r\n  };\r\n\r\n  return(\r\n    active\r\n    ?\r\n    <NewItem name='Add an item' {...props} return={() => {props.dispatch({type: 'SET_ACTIVE', active:false}); props.dispatch({type: 'RESET_EDIT_ITEM'})}}/>\r\n    :\r\n    <Layout>\r\n      <HomeBar name='Pantry' style={styles.homebar} navigation={props.navigation}/>\r\n      <React.Fragment>\r\n        <Card style={styles.card} header={(headerProps) => {return Header(props)}}>\r\n        {\r\n          <View>\r\n            <View style={{ flex: 1, alignSelf: 'stretch', flexDirection: 'row', marginLeft: 12, marginRight: 36, justifyContent: 'center',\r\n              alignItems: 'center' }}>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Food\r\n            </Text>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Brand\r\n            </Text>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Amount\r\n            </Text>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Expiration\r\n            </Text>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Purchase\r\n            </Text>\r\n            <View style={styles.emptyIcon} />\r\n            <View style={styles.emptyIcon} />\r\n          </View>\r\n          <List\r\n            data={ingredients}\r\n            renderItem={(renderProps) => {return renderItem(renderProps, props, token);}}\r\n          />\r\n          </View>\r\n\r\n        }\r\n        </Card>\r\n      </React.Fragment>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default connect()(Pantry);\r\n\r\n/*===========================Styles================================*/\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  homebar: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    margin: 10,\r\n  },\r\n  layout: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  margin: {\r\n\r\n  },\r\n  icon: {\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2\r\n\r\n  },\r\n  emptyIcon: {\r\n    padding: 16\r\n  }\r\n});\r\n","/*\r\nThis file creates the calendar component that we use to display ingredient\r\ndata in a calendar layout. The items are placed based on when they are\r\nset to expire\r\n*/\r\n\r\nimport * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { Layout, Header, Calendar, Text, Button  } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport {useSelector, connect} from 'react-redux';\r\n\r\n\r\nconst datesAreOnSameDay = (first, second) =>\r\n    first.getFullYear() === second.getFullYear() &&\r\n    first.getMonth() === second.getMonth() &&\r\n    first.getDate() === second.getDate();\r\n\r\nconst MapDay = (date, ingredientData) => {\r\n  return ingredientData.map((item) => {\r\n    if (datesAreOnSameDay(date, item.expirationDate)) {\r\n      return(<Text style={styles.dayContainer}>{item.name}</Text>)\r\n    }\r\n      else return;\r\n  })\r\n\r\n}\r\n\r\nconst DayCell = ({ date }, style, ingredientData) => (\r\n\r\n  <View\r\n    style={[styles.dayContainer, style.container]}>\r\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\r\n    <Text style={style.text}></Text>\r\n    {\r\n      MapDay(date, ingredientData)\r\n    }\r\n\r\n  </View>\r\n);\r\n\r\nexport const CalendarView = ({navigation}) => {\r\n\r\n  const [date, setDate] = React.useState(null);\r\n\r\n  const ingredientData = useSelector(state => state.PantryData.ingredients);\r\n\r\n\r\n  const now = new Date();\r\n  const next = new Date(now.getFullYear() + 1, now.getMonth(), now.getDate());\r\n  const prev = new Date(now.getFullYear() - 1, now.getMonth(), now.getDate());\r\n\r\n  return (\r\n    <Layout>\r\n      <HomeBar name=\"Calendar\" navigation={navigation} />\r\n      <Calendar\r\n        style={styles.calendar}\r\n        date={date}\r\n        onSelect={nextDate => setDate(nextDate)}\r\n        renderDay={({ date }, style) => DayCell({ date }, style, ingredientData)}\r\n        min={prev}\r\n        max={next}\r\n      />\r\n    </Layout>\r\n\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  dayContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    aspectRatio: 1,\r\n  },\r\n  calendar: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  value: {\r\n    fontSize: 12,\r\n    fontWeight: '400',\r\n  },\r\n});\r\n\r\nexport default connect()(CalendarView);\r\n","/*\r\nThis file represents our cookbook which is where users can search for\r\nand view new recipes. This displays results from the API call and allows\r\nthe users to click and expand recipes or to view their original website.\r\nThe data is gathered using our python file to display the ingredients and\r\nsteps needed to follow the recipe\r\n*/\r\n\r\nimport * as React from 'react';\r\nimport { View, ScrollView, Linking, StyleSheet, ActivityIndicator, Image } from \"react-native\";\r\nimport { Layout, Text, Input, Button, Icon, List, ListItem, Card } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\n\r\n\r\n\r\nexport default class Cookbook extends React.Component{\r\n  state = {\r\n    recipeResults: {\"results\": []},\r\n    recipeContent: {},\r\n    queryStr: \"\",\r\n    selected: null,\r\n    data: ['SELECTED','NOT SELECTED']\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n          <HomeBar name='Cookbook' navigation={this.props.navigation}/>\r\n            <View>\r\n            <Text style={{paddingLeft: '24px'}} category='h1'>Search for a Recipe</Text>\r\n            <Text category='h6' style={{fontStyle: 'italic', paddingLeft: '24px' }}>Enter Ingredients Separated By Commas</Text>\r\n              <Input style={{paddingLeft: '24px', paddingRight: '24px', backgroundColor: 'aliceblue'}}  placeholder=\"Noodles, Seaweed, Carrots, Onions, ...\" value={this.state.queryStr} onChangeText={(text) => {this.setState({queryStr: text})}} />\r\n              <Button style={{margin: '24px'}}  onPress={() => { this.getJson()}}>Search</Button>\r\n            </View>\r\n            <View style={styles.fixed}>\r\n                    {\r\n                      this.state.selected != null\r\n                      &&\r\n                      <Layout>\r\n                        <Text>\r\n                          {this.state.selected.trim()}\r\n                        </Text>\r\n                        <Text>\r\n                          {\r\n                          this.state.recipeContent.hasOwnProperty('title')\r\n                          ?\r\n                          <View>\r\n                            {\r\n                              this.state.recipeContent.hasOwnProperty('image')\r\n                              &&\r\n                              <Image\r\n                              source={{ uri: this.state.recipeContent.image }}\r\n                              style={{ width: 200, height: 200 }}\r\n                              PlaceholderContent={<ActivityIndicator/>}\r\n                            />\r\n                            }\r\n                            <Text category='h4'>\r\n                            {\r\n                            this.state.recipeContent.hasOwnProperty('yield')\r\n                            &&\r\n                            this.state.recipeContent.yield\r\n                            }\r\n                            </Text>\r\n                            <Text category='h3'>\r\n                              Ingredients\r\n                            </Text>\r\n                            <View>\r\n                            {\r\n                              this.state.recipeContent.hasOwnProperty('ingredients')\r\n                              &&\r\n                              this.state.recipeContent.ingredients.map((item) => {\r\n                                return(\r\n                                  <Text>\r\n                                    - {item}\r\n                                  </Text>\r\n                                )\r\n                              })\r\n                            }\r\n                            </View>\r\n                            <Text category='h3'>\r\n                              Instructions\r\n                            </Text>\r\n                            <Text>\r\n                              {\r\n                                this.state.recipeContent.hasOwnProperty('instructions')\r\n                                &&\r\n                                this.state.recipeContent.instructions\r\n                              }\r\n                            </Text>\r\n                          </View>\r\n                          :\r\n                          JSON.stringify(this.state.recipeContent)\r\n                          }\r\n                        </Text>\r\n                      </Layout>\r\n                    }\r\n            </View>\r\n            <ScrollView>\r\n              <View style={styles.container} >\r\n                <View style={styles.item}>\r\n                {\r\n                  this.state.recipeResults.results.map((item) => {\r\n                    return(\r\n                      <Layout style={{display: 'flex', flexDirection: 'row', borderBottom: '3px solid royalblue', borderTop: '3px solid aliceblue', padding: '5px', margin: '5px'}}>\r\n                        <Layout >\r\n                          <Button style={{margin: '10px', marginTop: '20px'}} onPress={() => {\r\n                            this.setState({selected: item.title});\r\n                            this.scrapeRecipe(item.href);\r\n                          }}>Open</Button>\r\n                          </Layout>\r\n                          <Layout>\r\n                            <Text category='h3'>\r\n                              {item.title.trim()}\r\n                            </Text>\r\n                            <Text category= 'h6' style={{fontStyle: 'italic'}}>Ingredients: {item.ingredients}</Text>\r\n                            <Text style={{color: 'blue'}}\r\n                                onPress={() => Linking.openURL(item.href)}>\r\n                              {item.href}\r\n                            </Text>\r\n                            </Layout>\r\n                      </Layout>\r\n                    )\r\n                  })\r\n                }\r\n                </View>\r\n              </View>\r\n            </ScrollView>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  getJson(){\r\n\r\n    const stuff = {\r\n        ingredients: this.state.queryStr.split(',')\r\n    };\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n    var raw = JSON.stringify(stuff);\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(\"https://pocketpantry.app/api/recipes\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        try {\r\n          this.setState({recipeResults: JSON.parse(result)});\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n\r\n        })\r\n      .catch(error => console.log('error', error));\r\n\r\n  }\r\n\r\n  scrapeRecipe(url){\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n    var raw = JSON.stringify({'url':url});\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(\"https://pocketpantry.app/api/recipes/scrape\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        try {\r\n          this.setState({recipeContent: JSON.parse(result)});\r\n\r\n        } catch (e) {\r\n            this.setState({recipeContent: result})\r\n        }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n\r\n  },\r\n  item: {\r\n\r\n  },\r\n  fixed: {\r\n\r\n  }\r\n})\r\n","import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { Layout, Card, Text, List, Button, Input, Datepicker } from '@ui-kitten/components';\r\nimport BackBar from './BackBar';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst NewItem = (props) => {\r\n\r\n    const editingItem = useSelector(state => state.GroceryListEditData.item);\r\n    const validItems = useSelector(state => state.GroceryListEditData.valid);\r\n    const editing = useSelector(state => state.GroceryListEditData.editing);\r\n    const token = useSelector(state => state.UserData.token);\r\n\r\n    return (\r\n        <Layout >\r\n            <BackBar name='Edit an Item' return={props.return} />\r\n              <React.Fragment>\r\n                <Card style={styles.card} header={() => {\r\n                  return(<Text category='h3' style={{margin: 10}}>New Item</Text>)\r\n                }}>\r\n                  <View style={{flex: 1, flexDirection: 'row', alignItems: 'stretch'}}>\r\n                    <View>\r\n                      <Text category='h6' style={styles.input}>Name</Text>\r\n                      <Text category='h6' style={styles.input}>Amount</Text>\r\n                      <Text category='h6' style={styles.input}>Units</Text>\r\n                    </View>\r\n                    <View>\r\n                      <Input placeholder='Name'\r\n                        value={editingItem.name}\r\n                        status={validItems.name}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_GROCERY_EDIT_NAME', name:value});}}                    \r\n                      />\r\n                      <Input placeholder='Amount'\r\n                        value={editingItem.amount}\r\n                        status={validItems.amount}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_GROCERY_EDIT_AMOUNT', amount:value});}} \r\n                      />\r\n                      <Input placeholder='Units'\r\n                        value={editingItem.unitOfAmount}\r\n                        status={validItems.unitOfAmount}\r\n                        onChangeText={value => {props.dispatch({type: 'SET_GROCERY_EDIT_UNIT', unitOfAmount:value});}} \r\n                        \r\n                      />\r\n                    </View>\r\n                  </View>\r\n                  <Button\r\n                  onPress ={() => {\r\n                    let valid = true;\r\n                    if (!editingItem.name){\r\n                      valid = false;\r\n                    }\r\n                    if (!editingItem.amount || Number.isNaN(Number.parseFloat(editingItem.amount))) {\r\n                      valid = false;\r\n                    }\r\n                    else {\r\n                      props.dispatch({type: 'SET_GROCERY_EDIT_AMOUNT', amount:Number.parseFloat(editingItem.amount)});\r\n                    }\r\n                    if (!editingItem.unitOfAmount){\r\n                      valid = false;\r\n                    }\r\n\r\n                    if (!valid){\r\n                      console.log('invalid')\r\n                      return;\r\n                    }\r\n\r\n                    let data = {\r\n                      token: token,\r\n                      id: editingItem.id,\r\n                      name: editingItem.name,\r\n                      amount: editingItem.amount,\r\n                      unitOfAmount: editingItem.unitOfAmount,\r\n                    }\r\n          \r\n                    var myHeaders = new Headers();\r\n                    myHeaders.append(\"Content-Type\", \"application/json\");\r\n                    myHeaders.append('Access-Control-Allow-Origin', '*');\r\n          \r\n                    let requestOptions = {\r\n                      method: 'POST',\r\n                      headers: myHeaders,\r\n                      body: JSON.stringify(data),\r\n                      redirect: 'follow'\r\n                    };\r\n                    \r\n                    if (editing){\r\n                      console.log('aaaa')\r\n                      fetch(\"https://pocketpantry.app/api/update/grocery\", requestOptions)\r\n                      .then((response) => {\r\n                          if (response.status === 200) {\r\n                            fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                                .then((response2) => {\r\n                                  console.log('fetched again')\r\n                                  response2.json().then((jsonResult) => {\r\n                                        props.dispatch({type: 'SET_GROCERY_ACTIVE', active:false});\r\n                                        props.dispatch({type: 'RESET_GROCERY_EDIT_ITEM'});\r\n                                        props.dispatch({type: 'SET_GROCERYLIST_DATA', groceryList:jsonResult.grocery});\r\n                                    });\r\n                                })\r\n                                .then(result => {})\r\n                                .catch(error => console.log('error', error))\r\n                          }\r\n                      })\r\n                      .then(result => {})\r\n                      .catch(error => console.log('error', error))\r\n                    }\r\n                    else {\r\n                      console.log('bbbb')\r\n                      fetch(\"https://pocketpantry.app/api/add/grocery\", requestOptions)\r\n                      .then((response) => {\r\n                          if (response.status === 200) {\r\n                            fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                                .then((response2) => {\r\n                                  console.log('fetched again')\r\n                                  response2.json().then((jsonResult) => {\r\n                                        props.dispatch({type: 'SET_GROCERY_ACTIVE', active:false});\r\n                                        props.dispatch({type: 'RESET_GROCERY_EDIT_ITEM'});\r\n                                        props.dispatch({type: 'SET_GROCERYLIST_DATA', groceryList:jsonResult.grocery});\r\n                                    });\r\n                                })\r\n                                .then(result => {})\r\n                                .catch(error => console.log('error', error))\r\n                          }\r\n                      })\r\n                      .then(result => {})\r\n                      .catch(error => console.log('error', error))\r\n                    }\r\n          \r\n\r\n                  }\r\n                }\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Card>\r\n              </React.Fragment>\r\n            </Layout>\r\n    );\r\n};\r\n\r\nexport default connect()(NewItem);\r\n\r\n\r\n/*===========================Styles================================*/\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n    },\r\n    layout: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    input: {\r\n      margin: 10\r\n    }\r\n  });","/*\r\nThis file holds the information for the grocery list page. This page functions\r\nsimilarly to the pantry page but it is a grocery list, so it is made up of items\r\nthat the user likely does not already have. Like the pantry, you are able to add\r\nand remove items and those items stay stored on your account\r\n*/\r\n\r\nimport * as React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport { Layout, Text, Card, Button, ListItem, List, Icon } from '@ui-kitten/components';\r\nimport HomeBar from './HomeBar';\r\nimport NewItem from './NewGroceryItem';\r\nimport { connect, useSelector } from 'react-redux';\r\n\r\nconst Header = (props) => (\r\n  <View {...props}>\r\n    <div style={{display: 'flex', justifyContent: 'space-between', margin: 15}}>\r\n      <Text category='h1'>Your Grocery List</Text>\r\n      <div style={{display: 'flex'}}>\r\n      <Button style={{paddingBottom: '15px', marginLeft: '10px'  }} onPress={() => { }}\r\n        appearance='outline'\r\n        accessoryLeft={renderAddIcon}\r\n        onPress={() => {props.dispatch({type: 'SET_GROCERY_ACTIVE', active:true}); props.dispatch({type: 'SET_GROCERY_EDITING', edit:false});}}\r\n      />\r\n\r\n      </div>\r\n    </div>\r\n  </View>\r\n);\r\n\r\nconst renderAddIcon = (props) => (\r\n  <Icon {...props}\r\n  name='plus-outline'\r\n  />\r\n);\r\n\r\nconst GroceryList = (props) => {\r\n\r\n  const groceryList = useSelector(state => state.GroceryListData.groceryList);\r\n  const active = useSelector(state => state.GroceryListEditData.active);\r\n  const token = useSelector(state => state.UserData.token);\r\n\r\n  const renderDeleteIcon = (props) => (\r\n    <Icon {...props}\r\n    name='trash-2-outline'\r\n    />\r\n  );\r\n\r\n  const renderEditIcon = (props) => (\r\n    <Icon {...props}\r\n    name='edit-outline'\r\n    />\r\n  );\r\n\r\n  const renderItem = (renderProps, props, token) => {\r\n\r\n    let item = renderProps.item;\r\n    let index = renderProps.index;\r\n\r\n    if (item == undefined || item == null){\r\n      return;\r\n    }\r\n\r\n    return(\r\n\r\n    <View>\r\n      <ListItem>\r\n      <View appearance='outline' style={{ flex: 1, alignSelf: 'stretch', flexDirection: 'row', marginLeft: 5, marginRight: 5, justifyContent: 'center',\r\n      alignItems: 'center' }}>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {item.name}\r\n        </Text>\r\n        <Text style={{ flex: 1, alignSelf: 'center' }}>\r\n          {`${item.amount} ${item.unitOfAmount}`}\r\n        </Text>\r\n\r\n        <Button style={styles.icon} appearance='outline'\r\n        accessoryLeft={renderEditIcon}\r\n        onPress={() =>{ \r\n          props.dispatch({type: 'SET_GROCERY_EDIT_ITEM', item: {\r\n            id: item.id,\r\n            name: item.name, \r\n            amount: item.amount,\r\n            unitOfAmount: item.unitOfAmount,\r\n          }});\r\n          props.dispatch({type: 'SET_GROCERY_EDITING', editing:true});\r\n          props.dispatch({type: 'SET_GROCERY_ACTIVE', active:true});\r\n        }}\r\n        />\r\n        <Button style={styles.icon} appearance='outline'\r\n        accessoryLeft={renderDeleteIcon}\r\n        onPress={() => {\r\n\r\n          let data = {\r\n            token: token,\r\n            id: item.id\r\n          }\r\n\r\n          var myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n          myHeaders.append('Access-Control-Allow-Origin', '*');\r\n\r\n          let requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(data),\r\n            redirect: 'follow'\r\n          };\r\n\r\n\r\n          fetch(\"https://pocketpantry.app/api/delete/grocery\", requestOptions)\r\n          .then((response) => {\r\n              if (response.status === 200) {\r\n                fetch(\"https://pocketpantry.app/api/userdata\", requestOptions)\r\n                    .then((response2) => {\r\n                      response2.json().then((jsonResult) => {\r\n                            props.dispatch({type: 'SET_GROCERYLIST_DATA', groceryList:jsonResult.grocery});\r\n                        });\r\n                    })\r\n                    .then(result => {})\r\n                    .catch(error => console.log('error', error))\r\n              }\r\n          })\r\n          .then(result => {})\r\n          .catch(error => console.log('error', error))\r\n        }}\r\n        />\r\n      </View>\r\n      </ListItem>\r\n\r\n    </View>\r\n    );\r\n  };\r\n\r\n  return(\r\n    active\r\n    ?\r\n    <NewItem name='Add an item' {...props} return={() => {props.dispatch({type: 'SET_GROCERY_ACTIVE', active:false}); props.dispatch({type: 'RESET_GROCERY_EDIT_ITEM'})}}/>\r\n    :\r\n    <Layout>\r\n      <HomeBar name='GroceryList' style={styles.homebar} navigation={props.navigation}/>\r\n      <React.Fragment>\r\n        <Card style={styles.card} header={(headerProps) => {return Header(props)}}>\r\n        {\r\n          <View>\r\n            <View style={{ flex: 1, alignSelf: 'stretch', flexDirection: 'row', marginLeft: 12, marginRight: 36, justifyContent: 'center',\r\n              alignItems: 'center' }}>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Food\r\n            </Text>\r\n            <Text category='h6' style={{ flex: 1, alignSelf: 'center' }}>\r\n              Amount\r\n            </Text>\r\n            <View style={styles.emptyIcon} />\r\n            <View style={styles.emptyIcon} />\r\n          </View>\r\n          <List\r\n            data={groceryList}\r\n            renderItem={(renderProps) => {return renderItem(renderProps, props, token);}}\r\n          />        \r\n          </View>\r\n\r\n        }\r\n        </Card>\r\n      </React.Fragment>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default connect()(GroceryList);\r\n\r\n/*===========================Styles================================*/\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  homebar: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    margin: 10,\r\n  },\r\n  layout: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  margin: {\r\n    \r\n  },\r\n  icon: {\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2\r\n\r\n  },\r\n  emptyIcon: {\r\n    padding: 16\r\n  }\r\n});\r\n","/*\r\nThis component handles the different pages that the user can navigate through\r\non the app. It allows them to click between the dashboard, pantry, calendar,\r\ncookbook, and grocery list.\r\n*/\r\n\r\nimport React from 'react';\r\nimport { SafeAreaView } from 'react-native';\r\nimport { Drawer, DrawerItem, IndexPath } from '@ui-kitten/components';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Dashboard from './Dashboard.js';\r\nimport Pantry from './Pantry.js';\r\nimport CalendarView from './Calendar.js';\r\nimport Cookbook from './Cookbook.js';\r\nimport GroceryList from './GroceryList.js';\r\nimport { PropsService } from '@ui-kitten/components/devsupport';\r\n\r\nconst {Navigator, Screen } = createDrawerNavigator();\r\n\r\nconst DrawerContent = ({ navigation, state }) => (\r\n  <Drawer\r\n    selectedIndex={new IndexPath(state.index)}\r\n    onSelect={index => navigation.navigate(state.routeNames[index.row])}>\r\n    <DrawerItem title='Dashboard' />\r\n    <DrawerItem title='Pantry' />\r\n    <DrawerItem title='Calendar' />\r\n    <DrawerItem title='Cookbook' />\r\n    <DrawerItem title='Groceries' />\r\n  </Drawer>\r\n);\r\n\r\nconst AppNavigator = (props) => (\r\n  <NavigationContainer >\r\n      <Navigator style={{backgroundColor: 'blue'}} drawerContent={props => <DrawerContent {...props}/>}>\r\n        <Screen name='Dashboard' component={Dashboard}/>\r\n        <Screen name='Pantry' component={Pantry}/>\r\n        <Screen name='Calendar' component={CalendarView}/>\r\n        <Screen name='Cookbook' component={Cookbook}/>\r\n        <Screen name='Groceries' component={GroceryList}/>\r\n    </Navigator>\r\n  </NavigationContainer>\r\n);\r\n\r\n\r\nexport default AppNavigator;\r\n","/*\r\nThis file holds the information about the user's account. It holds their\r\nusername, email, and a token specific to them\r\n*/\r\n\r\nconst initialState = {\r\n    username : \"User\",\r\n    email: \"Email\",\r\n    token: \"none\"\r\n}\r\n\r\nconst UserInfo = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_USERNAME':\r\n            return {\r\n                ...state,\r\n                username: action.username\r\n            }\r\n        case 'SET_EMAIL':\r\n            return {\r\n                ...state,\r\n                email: action.email\r\n            }\r\n        case 'SET_JWT_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default UserInfo;\r\n","/*\r\nThis file contains information for the items that are placed onto the calendar.\r\nSpecifically, it has their date of expiration and the name so that they can\r\nbe placed on the calendar in the correct location.\r\n*/\r\n\r\nconst initialState = {\r\n    expiration: {\r\n            \"2020-11-23\": [\"Onion\", \"Cilantro\"],\r\n            \"2020-11-21\": [\"Banana\", \"Oranges\", \"Chicken nuggs\", \"Broccoli\", \"Sweet Potato\"],\r\n    },\r\n}\r\n\r\nconst CalendarData = (state = initialState, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CalendarData;\r\n","/*\r\nThis file contains the data for items placed in the pantry, such as their id,\r\nthe name of the item, its brand, the amount of the item in the pantry, the unit\r\nof that amount, the expiration date, and the original date of purchase. This helps\r\ndetermine where a food item should be placed on the calendar and other various\r\nspots in the app\r\n*/\r\n\r\nconst initialState = {\r\n    ingredients: [\r\n        {\r\n            id: 0,\r\n            name: \"Cilantro\",\r\n            brand: \"N/A\",\r\n            amount: 1,\r\n            unitOfAmount: \"bushel\",\r\n            expirationDate: new Date(\"12/5/2020\"),\r\n            dateOfPurchase: new Date(\"11/25/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Green Onions\",\r\n            brand: \"N/A\",\r\n            amount: 2.0,\r\n            unitOfAmount: \"gram(s)\",\r\n            expirationDate: new Date(\"12/10/2020\"),\r\n            dateOfPurchase: new Date(\"11/25/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Banana\",\r\n            brand: \"N/A\",\r\n            amount: 2.0,\r\n            unitOfAmount: \"\",\r\n            expirationDate: new Date(\"12/5/2020\"),\r\n            dateOfPurchase: new Date(\"11/25/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Chicken\",\r\n            brand: \"Ol' McDonald\",\r\n            amount: 1.0,\r\n            unitOfAmount: \"whole chickens\",\r\n            expirationDate: new Date(\"11/30/2020\"),\r\n            dateOfPurchase: new Date(\"11/20/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Carrots\",\r\n            brand: \"N/A\",\r\n            amount: 10.0,\r\n            unitOfAmount: \"\",\r\n            expirationDate: new Date(\"12/10/2020\"),\r\n            dateOfPurchase: new Date(\"11/25/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Pomegranate\",\r\n            brand: \"N/A\",\r\n            amount: 2.0,\r\n            unitOfAmount: \"\",\r\n            expirationDate: new Date(\"12/19/2020\"),\r\n            dateOfPurchase: new Date(\"11/25/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Beef Jerky\",\r\n            brand: \"Jack Links\",\r\n            amount: 0.5,\r\n            unitOfAmount: \"lb\",\r\n            expirationDate: new Date(\"10/1/2021\"),\r\n            dateOfPurchase: new Date(\"11/25/2020\"),\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Peanut Butter\",\r\n            brand: \"Jif (its pronounced gif not jif)\",\r\n            amount: 1,\r\n            unitOfAmount: \"container\",\r\n            expirationDate: new Date(\"1/1/2022\"),\r\n            dateOfPurchase: new Date(\"9/25/2020\"),\r\n        },\r\n    ],\r\n    meals: [\r\n        {\r\n            id: 0,\r\n            name: \"spaghetti\",\r\n            portions: 3,\r\n            creation: new Date(),\r\n        }\r\n    ]\r\n}\r\n\r\nconst PantryData = (state = initialState, action) => {\r\n    let res = {}\r\n    switch(action.type){\r\n        case \"SET_INGREDIENT_DATA\":\r\n            res = {\r\n                ingredients: [...action.ingredients],\r\n                meals: state.meals,\r\n            }\r\n            for (let i = 0; i < res.ingredients.length; i ++){\r\n                res.ingredients[i].expirationDate = new Date(res.ingredients[i].expirationDate);\r\n                res.ingredients[i].dateOfPurchase = new Date(res.ingredients[i].dateOfPurchase);\r\n            }\r\n            res.ingredients = [...res.ingredients]\r\n            return (res);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default PantryData;\r\n","/*\r\nThis file contains the data for being able to edit items that currently exist in\r\nthe pantry. This allows the user to update any info they may have incorrectly entered\r\nthe first time\r\n*/\r\n\r\nconst initialState = {\r\n    active: false,\r\n    editing: false,\r\n    item: {\r\n        id: 0,\r\n        name: \"\",\r\n        brand: \"\",\r\n        amount: 1,\r\n        unitOfAmount: \"\",\r\n        expirationDate: new Date(),\r\n        dateOfPurchase: new Date(),\r\n    },\r\n    valid: {\r\n        name: 'primary',\r\n        brand: 'primary',\r\n        amount: 'primary',\r\n        unitOfAmount: 'primary',\r\n    }\r\n}\r\n\r\nconst PantryEditData = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_ACTIVE':\r\n            return {\r\n                active: action.active,\r\n                editing: state.editing,\r\n                item: state.item,\r\n                valid: state.valid,\r\n            }\r\n        case 'SET_EDITING':\r\n            return {\r\n                active: state.active,\r\n                editing: action.editing,\r\n                item: state.item,\r\n                valid: state.valid,\r\n            }\r\n        case 'SET_EDIT_ITEM':\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {...action.item},\r\n                valid: state.valid,\r\n            }\r\n        case 'SET_EDIT_NAME':\r\n            let valid_name = 'primary';\r\n            if (!action.name){\r\n                valid_name = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    name: action.name,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    name:valid_name\r\n                }\r\n            }\r\n        case 'SET_EDIT_BRAND':\r\n            let valid_brand = 'primary';\r\n            if (!action.brand){\r\n                valid_brand = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    brand: action.brand,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    brand:valid_brand\r\n                }\r\n            }\r\n        case 'SET_EDIT_AMOUNT':\r\n            let valid_amount = 'primary';\r\n            if (Number.isNaN(action.amount) || Number.isNaN(+(action.amount)) || Number.isNaN(Number.parseFloat(action.amount))){\r\n                valid_amount = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    amount: action.amount,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    amount:valid_amount\r\n                }\r\n            }\r\n        case 'SET_EDIT_UNIT':\r\n            let valid_unit = 'primary';\r\n            if (!action.unitOfAmount){\r\n                valid_unit = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    unitOfAmount: action.unitOfAmount,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    unitOfAmount:valid_unit\r\n                }\r\n            }\r\n        case 'SET_EDIT_EXPIRATION':\r\n                return {\r\n                    active: state.active,\r\n                    editing: state.editing,\r\n                    item: {\r\n                        ...state.item,\r\n                        expirationDate: action.expirationDate,\r\n                    },\r\n                    valid: state.valid,\r\n                }\r\n        case 'SET_EDIT_PURCHASE':\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    dateOfPurchase: action.dateOfPurchase,\r\n                },\r\n                valid: state.valid,\r\n            }\r\n        case 'RESET_EDIT_ITEM':\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: initialState.item,\r\n                valid: state.valid,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default PantryEditData;\r\n","const initialState = {\r\n    groceryList: [\r\n        {\r\n            id: 0,\r\n            name: \"Cilantro\",\r\n            amount: 1,\r\n            unitOfAmount: \"bushel\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Green Onions\",\r\n            amount: 2.0,\r\n            unitOfAmount: \"gram(s)\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Banana\",\r\n            amount: 2.0,\r\n            unitOfAmount: \"\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Chicken\",\r\n            amount: 1.0,\r\n            unitOfAmount: \"whole chickens\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Carrots\",\r\n            amount: 10.0,\r\n            unitOfAmount: \"\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Pomegranate\",\r\n            amount: 2.0,\r\n            unitOfAmount: \"\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Beef Jerky\",\r\n            amount: 0.5,\r\n            unitOfAmount: \"lb\",\r\n        },\r\n        {\r\n            id: 0,\r\n            name: \"Peanut Butter\",\r\n            amount: 1,\r\n            unitOfAmount: \"container\",\r\n        },\r\n    ]\r\n}\r\n\r\nconst GroceryListData = (state = initialState, action) => {\r\n    let res = {}\r\n    switch(action.type){\r\n        case \"SET_GROCERYLIST_DATA\":\r\n            res = {\r\n                groceryList: [...action.groceryList],\r\n            }\r\n            res.groceryList = [...res.groceryList]\r\n            return (res);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default GroceryListData;","const initialState = {\r\n    active: false,\r\n    editing: false,\r\n    item: {\r\n        id: 0,\r\n        name: \"\",\r\n        brand: \"\",\r\n        amount: 1,\r\n        unitOfAmount: \"\",\r\n    },\r\n    valid: {\r\n        name: 'primary',\r\n        brand: 'primary',\r\n        amount: 'primary',\r\n        unitOfAmount: 'primary',   \r\n    }\r\n}\r\n\r\nconst GroceryListEditData = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_GROCERY_ACTIVE':\r\n            return {\r\n                active: action.active,\r\n                editing: state.editing,\r\n                item: state.item,\r\n                valid: state.valid,\r\n            } \r\n        case 'SET_GROCERY_EDITING':\r\n            return {\r\n                active: state.active,\r\n                editing: action.editing,\r\n                item: state.item,\r\n                valid: state.valid,\r\n            } \r\n        case 'SET_GROCERY_EDIT_ITEM':\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {...action.item},\r\n                valid: state.valid,\r\n            }\r\n        case 'SET_GROCERY_EDIT_NAME':\r\n            let valid_name = 'primary';\r\n            if (!action.name){\r\n                valid_name = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    name: action.name,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    name:valid_name\r\n                }\r\n            }\r\n        case 'SET_GROCERY_EDIT_BRAND':\r\n            let valid_brand = 'primary';\r\n            if (!action.brand){\r\n                valid_brand = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    brand: action.brand,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    brand:valid_brand\r\n                }\r\n            }\r\n        case 'SET_GROCERY_EDIT_AMOUNT':\r\n            let valid_amount = 'primary';\r\n            if (Number.isNaN(action.amount) || Number.isNaN(+(action.amount)) || Number.isNaN(Number.parseFloat(action.amount))){\r\n                valid_amount = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    amount: action.amount,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    amount:valid_amount\r\n                }\r\n            }\r\n        case 'SET_GROCERY_EDIT_UNIT':\r\n            let valid_unit = 'primary';\r\n            if (!action.unitOfAmount){\r\n                valid_unit = 'danger';\r\n            }\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: {\r\n                    ...state.item,\r\n                    unitOfAmount: action.unitOfAmount,\r\n                },\r\n                valid: {\r\n                    ...state.valid,\r\n                    unitOfAmount:valid_unit\r\n                }\r\n            }\r\n        case 'RESET_GROCERY_EDIT_ITEM':\r\n            return {\r\n                active: state.active,\r\n                editing: state.editing,\r\n                item: initialState.item,\r\n                valid: state.valid,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default GroceryListEditData;","/*\r\nThis file contains information for the items that are placed onto the calendar.\r\nSpecifically, it has their date of expiration and the name so that they can\r\nbe placed on the calendar in the correct location.\r\n*/\r\n\r\nconst initialState = {\r\n    recipe: {\r\n        recipe:{\r\n            title:'',\r\n            href: '',\r\n            ingredients: []\r\n        }\r\n    },\r\n    recipeContent: null,\r\n    loading: false,\r\n    loaded: false,\r\n}\r\n\r\nconst CalendarData = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SET_DASHBOARD_RECIPE':\r\n            return {\r\n                ...state,\r\n                recipe: action.recipe,\r\n            }\r\n        case 'SET_DASHBOARD_RECIPE_CONTENT':\r\n            return{\r\n                ...state,\r\n                recipeContent: action.recipeContent,\r\n            }\r\n        case 'SET_DASHBOARD_RECIPE_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            }\r\n        case 'SET_DASHBOARD_RECIPE_LOADED':\r\n            return {\r\n                ...state,\r\n                loaded: action.loaded,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default CalendarData;\r\n","import { combineReducers } from 'redux';\r\nimport UserData from './UserData';\r\nimport CalendarData from './CalendarData';\r\nimport PantryData from './PantryData';\r\nimport PantryEditData from './PantryEditData';\r\nimport GroceryListData from './GroceryListData';\r\nimport GroceryListEditData from './GroceryListEditData';\r\nimport DashboardData from './DashboardData';\r\n\r\nexport default combineReducers({\r\n    UserData,\r\n    CalendarData,\r\n    PantryData,\r\n    PantryEditData,\r\n    GroceryListData,\r\n    GroceryListEditData,\r\n    DashboardData\r\n})","/*\r\nWe needed to use redux to handle the passing of information to and from the\r\ndatabase and to update the app when the information is changed\r\n*/\r\n\r\nimport { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AccessibilityRole,\r\n  ImageProps,\r\n  ImageStyle,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n  Text as RNText,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport {\r\n  ApplicationProvider,\r\n  Button,\r\n  Icon,\r\n  IconRegistry,\r\n  Layout,\r\n  Text,\r\n}\r\nfrom \"@ui-kitten/components\";\r\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\r\nimport { mapping, light, dark } from \"@eva-design/eva\";\r\nimport Login from './src/components/Login.js';\r\nimport * as eva from '@eva-design/eva';\r\nimport { default as theme } from './theme.json';\r\nimport AppNavigator from './src/components/Navigation';\r\nimport Store from './src/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst themes = {\r\n  light: {\r\n    theme: light,\r\n    icon: \"sun\",\r\n    text: \"LIGHT\",\r\n  },\r\n  dark: {\r\n    theme: dark,\r\n    icon: \"moon\",\r\n    text: \"DARK\",\r\n  },\r\n};\r\n\r\ntype IconProps = {\r\n  name: string;\r\n  style?: ImageStyle;\r\n};\r\n\r\ntype CustomButtonWithIconProps = {\r\n  accessibilityRole: AccessibilityRole;\r\n  accessibilityLabel: string;\r\n  icon: string;\r\n  iconStyle?: ImageStyle;\r\n  onPress: () => void;\r\n  text: string;\r\n  style: any;\r\n};\r\n\r\nconst renderIcon = ({ name, style }: IconProps) => (\r\n  <Icon {...style} name={name} />\r\n);\r\n\r\nconst CustomButtonWithIcon = ({\r\n  accessibilityRole,\r\n  accessibilityLabel,\r\n  icon,\r\n  iconStyle,\r\n  onPress,\r\n  text,\r\n  style,\r\n}: CustomButtonWithIconProps) => {\r\n  const ButtonIcon = () => renderIcon({ name: icon, style: iconStyle });\r\n  return (\r\n    <Button\r\n      style={style}\r\n      icon={ButtonIcon}\r\n      onPress={onPress}\r\n      accessibilityRole={accessibilityRole}\r\n      accessibilityLabel={accessibilityLabel}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst App = (): React.ReactFragment => {\r\n\r\n  const [themeName, setThemeName] = useState(\"light\");\r\n  const theme = themes[themeName].theme;\r\n\r\n  const [logIn, setLogIn] = useState(false);\r\n\r\n  const changeTheme = () => {\r\n    setThemeName(themeName === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const { text: themeButtonText, icon: themeButtonIcon } =\r\n    themeName === \"light\" ? themes.dark : themes.light;\r\n\r\n  return (\r\n    <Provider store={Store}>\r\n      <IconRegistry icons={EvaIconsPack} />\r\n      <ApplicationProvider {...eva} theme={{ ...eva.dark, ...theme }}>\r\n        {\r\n          !logIn\r\n          ?\r\n          <ImageBackground source={require(\"./assets/are you feeling it now mr krabs.png\")} style={styles.image}>\r\n              <Login onLogIn={() => {setLogIn(true)}} />\r\n          </ImageBackground>\r\n        :\r\n        <AppNavigator/>\r\n        }\r\n\r\n      </ApplicationProvider>\r\n    </ Provider>\r\n  );\r\n};\r\n\r\n/**\r\n  Change Theme Button:\r\n\r\n  <CustomButtonWithIcon\r\n    accessibilityRole=\"button\"\r\n    accessibilityLabel=\"UI Kitten Change Theme\"\r\n    style={styles.iconButton}\r\n    text={`SWITCH TO ${themeButtonText} THEME`}\r\n    icon={themeButtonIcon}\r\n    onPress={changeTheme}\r\n    iconStyle={{ tintColor: \"white\" }}\r\n  />\r\n\r\n */\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n  },\r\n  iconButton: {\r\n    marginVertical: 16,\r\n  },\r\n  nativeButton: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/are you feeling it now mr krabs.0937fa4e.png\";"],"sourceRoot":""}